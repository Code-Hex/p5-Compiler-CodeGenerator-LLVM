; ModuleID = 'gen/runtime_api.c'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.7.0"

%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, i8*, i32 (i8*)*, i32 (i8*, i8*, i32)*, i64 (i8*, i64, i32)*, i32 (i8*, i8*, i32)*, %struct.__sbuf, %struct.__sFILEX*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i64 }
%struct.__sbuf = type { i8*, i32 }
%struct.__sFILEX = type opaque
%union.UnionType = type { double }
%struct._Object = type { i32, %union.UnionType }
%struct._Array = type { i32, %union.UnionType*, i64 }

@g_d = global double 0.000000e+00, align 8
@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@__stderrp = external global %struct.__sFILE*
@.str1 = private unnamed_addr constant [3 x i8] c"%f\00", align 1
@.str2 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str3 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str4 = private unnamed_addr constant [26 x i8] c"===== debug_print ======\0A\00", align 1
@.str5 = private unnamed_addr constant [15 x i8] c"=============\0A\00", align 1
@.str6 = private unnamed_addr constant [13 x i8] c"type = [%d]\0A\00", align 1
@.str7 = private unnamed_addr constant [12 x i8] c"ret = [%f]\0A\00", align 1
@u = common global %union.UnionType zeroinitializer, align 8

; Function Attrs: nounwind ssp uwtable
define void @print_object(i64 %_o.coerce) #0 {
entry:
  %_o = alloca %union.UnionType, align 8
  %o = alloca i8*, align 8
  %object = alloca %struct._Object*, align 8
  %coerce.dive = getelementptr %union.UnionType* %_o, i32 0, i32 0
  %0 = bitcast double* %coerce.dive to i64*
  store i64 %_o.coerce, i64* %0, align 1
  %o1 = bitcast %union.UnionType* %_o to i8**
  %1 = load i8** %o1, align 8
  store i8* %1, i8** %o, align 8
  %2 = load i8** %o, align 8
  %3 = ptrtoint i8* %2 to i64
  %and = and i64 %3, -4503599627370496
  %cmp = icmp eq i64 %and, -4503599627370496
  %conv = zext i1 %cmp to i32
  %conv2 = sext i32 %conv to i64
  %4 = load i8** %o, align 8
  %5 = ptrtoint i8* %4 to i64
  %and3 = and i64 %5, 4222124650659840
  %shr = lshr i64 %and3, 48
  %mul = mul i64 %conv2, %shr
  switch i64 %mul, label %sw.default [
    i64 1, label %sw.bb
    i64 0, label %sw.bb4
    i64 2, label %sw.bb6
    i64 3, label %sw.bb8
    i64 5, label %sw.bb10
  ]

sw.bb:                                            ; preds = %entry
  %6 = load i8** %o, align 8
  %7 = ptrtoint i8* %6 to i64
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.str, i32 0, i32 0), i64 %7)
  br label %sw.epilog

sw.bb4:                                           ; preds = %entry
  %8 = load %struct.__sFILE** @__stderrp, align 8
  %d = bitcast %union.UnionType* %_o to double*
  %9 = load double* %d, align 8
  %call5 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %8, i8* getelementptr inbounds ([3 x i8]* @.str1, i32 0, i32 0), double %9)
  br label %sw.epilog

sw.bb6:                                           ; preds = %entry
  %10 = load i8** %o, align 8
  %11 = ptrtoint i8* %10 to i64
  %xor = xor i64 %11, -3940649673949184
  %12 = inttoptr i64 %xor to i8*
  %call7 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.str2, i32 0, i32 0), i8* %12)
  br label %sw.epilog

sw.bb8:                                           ; preds = %entry
  %13 = load i8** %o, align 8
  %14 = ptrtoint i8* %13 to i64
  %xor9 = xor i64 %14, -3659174697238528
  %15 = inttoptr i64 %xor9 to %struct._Array*
  call void @print(%struct._Array* %15)
  br label %sw.epilog

sw.bb10:                                          ; preds = %entry
  %16 = load i8** %o, align 8
  %17 = ptrtoint i8* %16 to i64
  %xor11 = xor i64 %17, -3096224743817216
  %18 = inttoptr i64 %xor11 to %struct._Object*
  store %struct._Object* %18, %struct._Object** %object, align 8
  %19 = load %struct._Object** %object, align 8
  %v = getelementptr inbounds %struct._Object* %19, i32 0, i32 1
  %coerce.dive12 = getelementptr %union.UnionType* %v, i32 0, i32 0
  %20 = bitcast double* %coerce.dive12 to i64*
  %21 = load i64* %20, align 1
  call void @print_object(i64 %21)
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb10, %sw.bb8, %sw.bb6, %sw.bb4, %sw.bb
  ret void
}

declare i32 @printf(i8*, ...) #1

declare i32 @fprintf(%struct.__sFILE*, i8*, ...) #1

; Function Attrs: nounwind ssp uwtable
define void @print(%struct._Array* %array) #0 {
entry:
  %array.addr = alloca %struct._Array*, align 8
  %size = alloca i64, align 8
  %i = alloca i64, align 8
  store %struct._Array* %array, %struct._Array** %array.addr, align 8
  %0 = load %struct._Array** %array.addr, align 8
  %size1 = getelementptr inbounds %struct._Array* %0, i32 0, i32 2
  %1 = load i64* %size1, align 8
  store i64 %1, i64* %size, align 8
  store i64 0, i64* %i, align 8
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i64* %i, align 8
  %3 = load i64* %size, align 8
  %cmp = icmp ult i64 %2, %3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load i64* %i, align 8
  %5 = load %struct._Array** %array.addr, align 8
  %list = getelementptr inbounds %struct._Array* %5, i32 0, i32 1
  %6 = load %union.UnionType** %list, align 8
  %arrayidx = getelementptr inbounds %union.UnionType* %6, i64 %4
  %coerce.dive = getelementptr %union.UnionType* %arrayidx, i32 0, i32 0
  %7 = bitcast double* %coerce.dive to i64*
  %8 = load i64* %7, align 1
  call void @print_object(i64 %8)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %9 = load i64* %i, align 8
  %inc = add i64 %9, 1
  store i64 %inc, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @say(%struct._Array* %array) #0 {
entry:
  %array.addr = alloca %struct._Array*, align 8
  store %struct._Array* %array, %struct._Array** %array.addr, align 8
  %0 = load %struct._Array** %array.addr, align 8
  call void @print(%struct._Array* %0)
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([2 x i8]* @.str3, i32 0, i32 0))
  ret void
}

; Function Attrs: nounwind ssp uwtable
define void @debug_print(i64 %o.coerce) #0 {
entry:
  %o = alloca %union.UnionType, align 8
  %coerce.dive = getelementptr %union.UnionType* %o, i32 0, i32 0
  %0 = bitcast double* %coerce.dive to i64*
  store i64 %o.coerce, i64* %0, align 1
  %1 = load %struct.__sFILE** @__stderrp, align 8
  %call = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %1, i8* getelementptr inbounds ([26 x i8]* @.str4, i32 0, i32 0))
  %coerce.dive1 = getelementptr %union.UnionType* %o, i32 0, i32 0
  %2 = bitcast double* %coerce.dive1 to i64*
  %3 = load i64* %2, align 1
  call void @print_object(i64 %3)
  %4 = load %struct.__sFILE** @__stderrp, align 8
  %call2 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %4, i8* getelementptr inbounds ([15 x i8]* @.str5, i32 0, i32 0))
  ret void
}

; Function Attrs: nounwind ssp uwtable
define %struct._Object* @new_Object() #0 {
entry:
  %call = call i8* @malloc(i64 16)
  %0 = bitcast i8* %call to %struct._Object*
  ret %struct._Object* %0
}

declare i8* @malloc(i64) #1

; Function Attrs: nounwind ssp uwtable
define i64 @Object_addObject(i64 %a.coerce, i64 %b.coerce) #0 {
entry:
  %retval = alloca %union.UnionType, align 8
  %a = alloca %union.UnionType, align 8
  %b = alloca %union.UnionType, align 8
  %ret = alloca %union.UnionType, align 8
  %i = alloca i32, align 4
  %d = alloca double, align 8
  %i50 = alloca i32, align 4
  %d61 = alloca double, align 8
  %coerce.dive = getelementptr %union.UnionType* %a, i32 0, i32 0
  %0 = bitcast double* %coerce.dive to i64*
  store i64 %a.coerce, i64* %0, align 1
  %coerce.dive1 = getelementptr %union.UnionType* %b, i32 0, i32 0
  %1 = bitcast double* %coerce.dive1 to i64*
  store i64 %b.coerce, i64* %1, align 1
  %2 = load %struct.__sFILE** @__stderrp, align 8
  %o = bitcast %union.UnionType* %ret to i8**
  %3 = load i8** %o, align 8
  %4 = ptrtoint i8* %3 to i64
  %and = and i64 %4, -4503599627370496
  %cmp = icmp eq i64 %and, -4503599627370496
  %conv = zext i1 %cmp to i32
  %conv2 = sext i32 %conv to i64
  %o3 = bitcast %union.UnionType* %ret to i8**
  %5 = load i8** %o3, align 8
  %6 = ptrtoint i8* %5 to i64
  %and4 = and i64 %6, 4222124650659840
  %shr = lshr i64 %and4, 48
  %mul = mul i64 %conv2, %shr
  %call = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %2, i8* getelementptr inbounds ([13 x i8]* @.str6, i32 0, i32 0), i64 %mul)
  br label %do.body

do.body:                                          ; preds = %entry
  %o5 = bitcast %union.UnionType* %a to i8**
  %7 = load i8** %o5, align 8
  %8 = ptrtoint i8* %7 to i64
  %and6 = and i64 %8, -4503599627370496
  %cmp7 = icmp eq i64 %and6, -4503599627370496
  %conv8 = zext i1 %cmp7 to i32
  %conv9 = sext i32 %conv8 to i64
  %o10 = bitcast %union.UnionType* %a to i8**
  %9 = load i8** %o10, align 8
  %10 = ptrtoint i8* %9 to i64
  %and11 = and i64 %10, 4222124650659840
  %shr12 = lshr i64 %and11, 48
  %mul13 = mul i64 %conv9, %shr12
  switch i64 %mul13, label %sw.default71 [
    i64 1, label %sw.bb
    i64 0, label %sw.bb38
  ]

sw.bb:                                            ; preds = %do.body
  br label %do.body14

do.body14:                                        ; preds = %sw.bb
  %o15 = bitcast %union.UnionType* %b to i8**
  %11 = load i8** %o15, align 8
  %12 = ptrtoint i8* %11 to i64
  %and16 = and i64 %12, -4503599627370496
  %cmp17 = icmp eq i64 %and16, -4503599627370496
  %conv18 = zext i1 %cmp17 to i32
  %conv19 = sext i32 %conv18 to i64
  %o20 = bitcast %union.UnionType* %b to i8**
  %13 = load i8** %o20, align 8
  %14 = ptrtoint i8* %13 to i64
  %and21 = and i64 %14, 4222124650659840
  %shr22 = lshr i64 %and21, 48
  %mul23 = mul i64 %conv19, %shr22
  switch i64 %mul23, label %sw.default [
    i64 1, label %sw.bb24
    i64 0, label %sw.bb31
  ]

sw.bb24:                                          ; preds = %do.body14
  %o25 = bitcast %union.UnionType* %a to i8**
  %15 = load i8** %o25, align 8
  %16 = ptrtoint i8* %15 to i64
  %o26 = bitcast %union.UnionType* %b to i8**
  %17 = load i8** %o26, align 8
  %18 = ptrtoint i8* %17 to i64
  %add = add nsw i64 %16, %18
  %conv27 = trunc i64 %add to i32
  store i32 %conv27, i32* %i, align 4
  %19 = load i32* %i, align 4
  %conv28 = zext i32 %19 to i64
  %or = or i64 %conv28, -4503599627370496
  %or29 = or i64 %or, 281474976710656
  %20 = inttoptr i64 %or29 to i8*
  %o30 = bitcast %union.UnionType* %ret to i8**
  store i8* %20, i8** %o30, align 8
  br label %sw.epilog

sw.bb31:                                          ; preds = %do.body14
  %o32 = bitcast %union.UnionType* %a to i8**
  %21 = load i8** %o32, align 8
  %22 = ptrtoint i8* %21 to i64
  %conv33 = trunc i64 %22 to i32
  %conv34 = sitofp i32 %conv33 to double
  %o35 = bitcast %union.UnionType* %b to i8**
  %23 = load i8** %o35, align 8
  %24 = bitcast i8* %23 to double*
  %25 = load double* %24, align 8
  %add36 = fadd double %conv34, %25
  store double %add36, double* %d, align 8
  %26 = load double* %d, align 8
  %d37 = bitcast %union.UnionType* %ret to double*
  store double %26, double* %d37, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %do.body14
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb31, %sw.bb24
  br label %do.end

do.end:                                           ; preds = %sw.epilog
  br label %sw.epilog72

sw.bb38:                                          ; preds = %do.body
  br label %do.body39

do.body39:                                        ; preds = %sw.bb38
  %o40 = bitcast %union.UnionType* %b to i8**
  %27 = load i8** %o40, align 8
  %28 = ptrtoint i8* %27 to i64
  %and41 = and i64 %28, -4503599627370496
  %cmp42 = icmp eq i64 %and41, -4503599627370496
  %conv43 = zext i1 %cmp42 to i32
  %conv44 = sext i32 %conv43 to i64
  %o45 = bitcast %union.UnionType* %b to i8**
  %29 = load i8** %o45, align 8
  %30 = ptrtoint i8* %29 to i64
  %and46 = and i64 %30, 4222124650659840
  %shr47 = lshr i64 %and46, 48
  %mul48 = mul i64 %conv44, %shr47
  switch i64 %mul48, label %sw.default68 [
    i64 1, label %sw.bb49
    i64 0, label %sw.bb60
  ]

sw.bb49:                                          ; preds = %do.body39
  %o51 = bitcast %union.UnionType* %a to i8**
  %31 = load i8** %o51, align 8
  %32 = bitcast i8* %31 to double*
  %33 = load double* %32, align 8
  %o52 = bitcast %union.UnionType* %b to i8**
  %34 = load i8** %o52, align 8
  %35 = ptrtoint i8* %34 to i64
  %conv53 = sitofp i64 %35 to double
  %add54 = fadd double %33, %conv53
  %conv55 = fptosi double %add54 to i32
  store i32 %conv55, i32* %i50, align 4
  %36 = load i32* %i50, align 4
  %conv56 = zext i32 %36 to i64
  %or57 = or i64 %conv56, -4503599627370496
  %or58 = or i64 %or57, 281474976710656
  %37 = inttoptr i64 %or58 to i8*
  %o59 = bitcast %union.UnionType* %ret to i8**
  store i8* %37, i8** %o59, align 8
  br label %sw.epilog69

sw.bb60:                                          ; preds = %do.body39
  %o62 = bitcast %union.UnionType* %a to i8**
  %38 = load i8** %o62, align 8
  %39 = bitcast i8* %38 to double*
  %40 = load double* %39, align 8
  %conv63 = fptosi double %40 to i32
  %conv64 = sitofp i32 %conv63 to double
  %o65 = bitcast %union.UnionType* %b to i8**
  %41 = load i8** %o65, align 8
  %42 = bitcast i8* %41 to double*
  %43 = load double* %42, align 8
  %add66 = fadd double %conv64, %43
  store double %add66, double* %d61, align 8
  %44 = load double* %d61, align 8
  %d67 = bitcast %union.UnionType* %ret to double*
  store double %44, double* %d67, align 8
  br label %sw.epilog69

sw.default68:                                     ; preds = %do.body39
  br label %sw.epilog69

sw.epilog69:                                      ; preds = %sw.default68, %sw.bb60, %sw.bb49
  br label %do.end70

do.end70:                                         ; preds = %sw.epilog69
  br label %sw.epilog72

sw.default71:                                     ; preds = %do.body
  br label %sw.epilog72

sw.epilog72:                                      ; preds = %sw.default71, %do.end70, %do.end
  br label %do.end73

do.end73:                                         ; preds = %sw.epilog72
  %45 = load %struct.__sFILE** @__stderrp, align 8
  %d74 = bitcast %union.UnionType* %ret to double*
  %46 = load double* %d74, align 8
  %call75 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %45, i8* getelementptr inbounds ([12 x i8]* @.str7, i32 0, i32 0), double %46)
  %47 = bitcast %union.UnionType* %retval to i8*
  %48 = bitcast %union.UnionType* %ret to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 8, i32 8, i1 false)
  %coerce.dive76 = getelementptr %union.UnionType* %retval, i32 0, i32 0
  %49 = bitcast double* %coerce.dive76 to i64*
  %50 = load i64* %49, align 1
  ret i64 %50
}

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture, i64, i32, i1) #2

attributes #0 = { nounwind ssp uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf"="true" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf"="true" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }
