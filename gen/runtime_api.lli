; ModuleID = 'gen/runtime_api.c'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.6.0"

%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, i8*, i32 (i8*)*, i32 (i8*, i8*, i32)*, i64 (i8*, i64, i32)*, i32 (i8*, i8*, i32)*, %struct.__sbuf, %struct.__sFILEX*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i64 }
%struct.__sbuf = type { i8*, i32 }
%struct.__sFILEX = type opaque
%struct._Object = type { i32, %struct._Value }
%struct._Value = type { i64, double, i8*, i8* }
%struct._Array = type { i32, %struct._Object**, i64 }

@__stderrp = external global %struct.__sFILE*
@.str = private unnamed_addr constant [16 x i8] c"o->type = [%d]\0A\00", align 1
@.str1 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@.str2 = private unnamed_addr constant [4 x i8] c"%lf\00", align 1
@.str3 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@__func__.shift = private unnamed_addr constant [6 x i8] c"shift\00", align 1
@.str5 = private unnamed_addr constant [18 x i8] c"gen/runtime_api.c\00", align 1
@.str6 = private unnamed_addr constant [21 x i8] c"0 && \22Type Error!\5Cn\22\00", align 1
@.str7 = private unnamed_addr constant [30 x i8] c"fetch from function argument\0A\00", align 1
@.str8 = private unnamed_addr constant [27 x i8] c"Type Error!: near by push\0A\00", align 1
@__func__.push = private unnamed_addr constant [5 x i8] c"push\00", align 1
@.str9 = private unnamed_addr constant [34 x i8] c"ERROR!!: cannot allocated memory\0A\00", align 1

define void @print_object(%struct._Object* %o) nounwind uwtable ssp {
entry:
  %o.addr = alloca %struct._Object*, align 8
  store %struct._Object* %o, %struct._Object** %o.addr, align 8
  %0 = load %struct.__sFILE** @__stderrp, align 8
  %1 = load %struct._Object** %o.addr, align 8
  %type = getelementptr inbounds %struct._Object* %1, i32 0, i32 0
  %2 = load i32* %type, align 4
  %call = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %0, i8* getelementptr inbounds ([16 x i8]* @.str, i32 0, i32 0), i32 %2)
  %3 = load %struct._Object** %o.addr, align 8
  %type1 = getelementptr inbounds %struct._Object* %3, i32 0, i32 0
  %4 = load i32* %type1, align 4
  switch i32 %4, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb3
    i32 2, label %sw.bb6
    i32 3, label %sw.bb9
    i32 6, label %sw.bb11
  ]

sw.bb:                                            ; preds = %entry
  %5 = load %struct._Object** %o.addr, align 8
  %v = getelementptr inbounds %struct._Object* %5, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 0
  %6 = load i64* %ivalue, align 8
  %call2 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str1, i32 0, i32 0), i64 %6)
  br label %sw.epilog

sw.bb3:                                           ; preds = %entry
  %7 = load %struct._Object** %o.addr, align 8
  %v4 = getelementptr inbounds %struct._Object* %7, i32 0, i32 1
  %dvalue = getelementptr inbounds %struct._Value* %v4, i32 0, i32 1
  %8 = load double* %dvalue, align 8
  %call5 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str2, i32 0, i32 0), double %8)
  br label %sw.epilog

sw.bb6:                                           ; preds = %entry
  %9 = load %struct._Object** %o.addr, align 8
  %v7 = getelementptr inbounds %struct._Object* %9, i32 0, i32 1
  %svalue = getelementptr inbounds %struct._Value* %v7, i32 0, i32 2
  %10 = load i8** %svalue, align 8
  %call8 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.str3, i32 0, i32 0), i8* %10)
  br label %sw.epilog

sw.bb9:                                           ; preds = %entry
  %11 = load %struct._Object** %o.addr, align 8
  %v10 = getelementptr inbounds %struct._Object* %11, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v10, i32 0, i32 3
  %12 = load i8** %ovalue, align 8
  %13 = bitcast i8* %12 to %struct._Array*
  call void @print(%struct._Array* %13)
  br label %sw.epilog

sw.bb11:                                          ; preds = %entry
  %14 = load %struct._Object** %o.addr, align 8
  %v12 = getelementptr inbounds %struct._Object* %14, i32 0, i32 1
  %ovalue13 = getelementptr inbounds %struct._Value* %v12, i32 0, i32 3
  %15 = load i8** %ovalue13, align 8
  %16 = bitcast i8* %15 to %struct._Object*
  call void @print_object(%struct._Object* %16)
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb11, %sw.bb9, %sw.bb6, %sw.bb3, %sw.bb
  ret void
}

declare i32 @fprintf(%struct.__sFILE*, i8*, ...)

declare i32 @printf(i8*, ...)

define void @print(%struct._Array* %array) nounwind uwtable ssp {
entry:
  %array.addr = alloca %struct._Array*, align 8
  %size = alloca i64, align 8
  %i = alloca i64, align 8
  store %struct._Array* %array, %struct._Array** %array.addr, align 8
  %0 = load %struct._Array** %array.addr, align 8
  %size1 = getelementptr inbounds %struct._Array* %0, i32 0, i32 2
  %1 = load i64* %size1, align 8
  store i64 %1, i64* %size, align 8
  store i64 0, i64* %i, align 8
  store i64 0, i64* %i, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i64* %i, align 8
  %3 = load i64* %size, align 8
  %cmp = icmp ult i64 %2, %3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load i64* %i, align 8
  %5 = load %struct._Array** %array.addr, align 8
  %list = getelementptr inbounds %struct._Array* %5, i32 0, i32 1
  %6 = load %struct._Object*** %list, align 8
  %arrayidx = getelementptr inbounds %struct._Object** %6, i64 %4
  %7 = load %struct._Object** %arrayidx, align 8
  call void @print_object(%struct._Object* %7)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %8 = load i64* %i, align 8
  %inc = add i64 %8, 1
  store i64 %inc, i64* %i, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

define void @say(%struct._Array* %array) nounwind uwtable ssp {
entry:
  %array.addr = alloca %struct._Array*, align 8
  store %struct._Array* %array, %struct._Array** %array.addr, align 8
  %0 = load %struct._Array** %array.addr, align 8
  call void @print(%struct._Array* %0)
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([2 x i8]* @.str4, i32 0, i32 0))
  ret void
}

define %struct._Object* @shift(%struct._Array* %args) nounwind uwtable ssp {
entry:
  %retval = alloca %struct._Object*, align 8
  %args.addr = alloca %struct._Array*, align 8
  %ret = alloca %struct._Object*, align 8
  %size = alloca i64, align 8
  %o = alloca %struct._Object*, align 8
  %array = alloca %struct._Array*, align 8
  store %struct._Array* %args, %struct._Array** %args.addr, align 8
  store %struct._Object* null, %struct._Object** %ret, align 8
  %0 = load %struct._Array** %args.addr, align 8
  %size1 = getelementptr inbounds %struct._Array* %0, i32 0, i32 2
  %1 = load i64* %size1, align 8
  store i64 %1, i64* %size, align 8
  %2 = load i64* %size, align 8
  %cmp = icmp ugt i64 %2, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store %struct._Object* null, %struct._Object** %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load i64* %size, align 8
  %cmp2 = icmp eq i64 %3, 1
  br i1 %cmp2, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.end
  %4 = load %struct._Array** %args.addr, align 8
  %list = getelementptr inbounds %struct._Array* %4, i32 0, i32 1
  %5 = load %struct._Object*** %list, align 8
  %arrayidx = getelementptr inbounds %struct._Object** %5, i64 0
  %6 = load %struct._Object** %arrayidx, align 8
  store %struct._Object* %6, %struct._Object** %o, align 8
  br label %do.body

do.body:                                          ; preds = %if.then3
  %7 = load %struct._Object** %o, align 8
  %type = getelementptr inbounds %struct._Object* %7, i32 0, i32 0
  %8 = load i32* %type, align 4
  %cmp4 = icmp ne i32 %8, 3
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %do.body
  call void @__assert_rtn(i8* getelementptr inbounds ([6 x i8]* @__func__.shift, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8]* @.str5, i32 0, i32 0), i32 49, i8* getelementptr inbounds ([21 x i8]* @.str6, i32 0, i32 0)) noreturn
  unreachable

if.end6:                                          ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %if.end6
  %9 = load %struct._Object** %o, align 8
  %v = getelementptr inbounds %struct._Object* %9, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 3
  %10 = load i8** %ovalue, align 8
  %11 = bitcast i8* %10 to %struct._Array*
  store %struct._Array* %11, %struct._Array** %array, align 8
  %12 = load %struct._Array** %array, align 8
  %list7 = getelementptr inbounds %struct._Array* %12, i32 0, i32 1
  %13 = load %struct._Object*** %list7, align 8
  %arrayidx8 = getelementptr inbounds %struct._Object** %13, i64 0
  %14 = load %struct._Object** %arrayidx8, align 8
  store %struct._Object* %14, %struct._Object** %ret, align 8
  %15 = load %struct._Array** %array, align 8
  %size9 = getelementptr inbounds %struct._Array* %15, i32 0, i32 2
  %16 = load i64* %size9, align 8
  %dec = add i64 %16, -1
  store i64 %dec, i64* %size9, align 8
  %17 = load %struct._Array** %array, align 8
  %list10 = getelementptr inbounds %struct._Array* %17, i32 0, i32 1
  %18 = load %struct._Object*** %list10, align 8
  %19 = bitcast %struct._Object** %18 to i8*
  %20 = call i64 @llvm.objectsize.i64(i8* %19, i1 false)
  %cmp11 = icmp ne i64 %20, -1
  br i1 %cmp11, label %cond.true, label %cond.false

cond.true:                                        ; preds = %do.end
  %21 = load %struct._Array** %array, align 8
  %list12 = getelementptr inbounds %struct._Array* %21, i32 0, i32 1
  %22 = load %struct._Object*** %list12, align 8
  %23 = bitcast %struct._Object** %22 to i8*
  %24 = load %struct._Array** %array, align 8
  %list13 = getelementptr inbounds %struct._Array* %24, i32 0, i32 1
  %25 = load %struct._Object*** %list13, align 8
  %add.ptr = getelementptr inbounds %struct._Object** %25, i64 1
  %26 = bitcast %struct._Object** %add.ptr to i8*
  %27 = load %struct._Array** %array, align 8
  %size14 = getelementptr inbounds %struct._Array* %27, i32 0, i32 2
  %28 = load i64* %size14, align 8
  %mul = mul i64 %28, 8
  %29 = load %struct._Array** %array, align 8
  %list15 = getelementptr inbounds %struct._Array* %29, i32 0, i32 1
  %30 = load %struct._Object*** %list15, align 8
  %31 = bitcast %struct._Object** %30 to i8*
  %32 = call i64 @llvm.objectsize.i64(i8* %31, i1 false)
  %call = call i8* @__memmove_chk(i8* %23, i8* %26, i64 %mul, i64 %32) nounwind
  br label %cond.end

cond.false:                                       ; preds = %do.end
  %33 = load %struct._Array** %array, align 8
  %list16 = getelementptr inbounds %struct._Array* %33, i32 0, i32 1
  %34 = load %struct._Object*** %list16, align 8
  %35 = bitcast %struct._Object** %34 to i8*
  %36 = load %struct._Array** %array, align 8
  %list17 = getelementptr inbounds %struct._Array* %36, i32 0, i32 1
  %37 = load %struct._Object*** %list17, align 8
  %add.ptr18 = getelementptr inbounds %struct._Object** %37, i64 1
  %38 = bitcast %struct._Object** %add.ptr18 to i8*
  %39 = load %struct._Array** %array, align 8
  %size19 = getelementptr inbounds %struct._Array* %39, i32 0, i32 2
  %40 = load i64* %size19, align 8
  %mul20 = mul i64 %40, 8
  %call21 = call i8* @__inline_memmove_chk(i8* %35, i8* %38, i64 %mul20)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call21, %cond.false ]
  br label %if.end23

if.else:                                          ; preds = %if.end
  %41 = load %struct.__sFILE** @__stderrp, align 8
  %call22 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %41, i8* getelementptr inbounds ([30 x i8]* @.str7, i32 0, i32 0))
  br label %if.end23

if.end23:                                         ; preds = %if.else, %cond.end
  %42 = load %struct._Object** %ret, align 8
  store %struct._Object* %42, %struct._Object** %retval
  br label %return

return:                                           ; preds = %if.end23, %if.then
  %43 = load %struct._Object** %retval
  ret %struct._Object* %43
}

declare void @__assert_rtn(i8*, i8*, i32, i8*) noreturn

declare i64 @llvm.objectsize.i64(i8*, i1) nounwind readnone

declare i8* @__memmove_chk(i8*, i8*, i64, i64) nounwind

define internal i8* @__inline_memmove_chk(i8* %__dest, i8* %__src, i64 %__len) nounwind uwtable inlinehint ssp {
entry:
  %__dest.addr = alloca i8*, align 8
  %__src.addr = alloca i8*, align 8
  %__len.addr = alloca i64, align 8
  store i8* %__dest, i8** %__dest.addr, align 8
  store i8* %__src, i8** %__src.addr, align 8
  store i64 %__len, i64* %__len.addr, align 8
  %0 = load i8** %__dest.addr, align 8
  %1 = load i8** %__src.addr, align 8
  %2 = load i64* %__len.addr, align 8
  %3 = load i8** %__dest.addr, align 8
  %4 = call i64 @llvm.objectsize.i64(i8* %3, i1 false)
  %call = call i8* @__memmove_chk(i8* %0, i8* %1, i64 %2, i64 %4) nounwind
  ret i8* %call
}

define %struct._Object* @push(%struct._Array* %args) nounwind uwtable ssp {
entry:
  %args.addr = alloca %struct._Array*, align 8
  %size = alloca i64, align 8
  %ret = alloca %struct._Object*, align 8
  %array = alloca %struct._Object*, align 8
  %value = alloca %struct._Object*, align 8
  %base = alloca %struct._Array*, align 8
  %tmp = alloca i8*, align 8
  store %struct._Array* %args, %struct._Array** %args.addr, align 8
  %0 = load %struct._Array** %args.addr, align 8
  %size1 = getelementptr inbounds %struct._Array* %0, i32 0, i32 2
  %1 = load i64* %size1, align 8
  store i64 %1, i64* %size, align 8
  store %struct._Object* null, %struct._Object** %ret, align 8
  %2 = load i64* %size, align 8
  %cmp = icmp ne i64 %2, 2
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %3 = load %struct.__sFILE** @__stderrp, align 8
  %call = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %3, i8* getelementptr inbounds ([27 x i8]* @.str8, i32 0, i32 0))
  br label %if.end30

if.else:                                          ; preds = %entry
  %4 = load %struct._Array** %args.addr, align 8
  %list = getelementptr inbounds %struct._Array* %4, i32 0, i32 1
  %5 = load %struct._Object*** %list, align 8
  %arrayidx = getelementptr inbounds %struct._Object** %5, i64 0
  %6 = load %struct._Object** %arrayidx, align 8
  store %struct._Object* %6, %struct._Object** %array, align 8
  %7 = load %struct._Array** %args.addr, align 8
  %list2 = getelementptr inbounds %struct._Array* %7, i32 0, i32 1
  %8 = load %struct._Object*** %list2, align 8
  %arrayidx3 = getelementptr inbounds %struct._Object** %8, i64 1
  %9 = load %struct._Object** %arrayidx3, align 8
  store %struct._Object* %9, %struct._Object** %value, align 8
  br label %do.body

do.body:                                          ; preds = %if.else
  %10 = load %struct._Object** %array, align 8
  %type = getelementptr inbounds %struct._Object* %10, i32 0, i32 0
  %11 = load i32* %type, align 4
  %cmp4 = icmp ne i32 %11, 3
  br i1 %cmp4, label %if.then5, label %if.end

if.then5:                                         ; preds = %do.body
  call void @__assert_rtn(i8* getelementptr inbounds ([5 x i8]* @__func__.push, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8]* @.str5, i32 0, i32 0), i32 69, i8* getelementptr inbounds ([21 x i8]* @.str6, i32 0, i32 0)) noreturn
  unreachable

if.end:                                           ; preds = %do.body
  br label %do.end

do.end:                                           ; preds = %if.end
  %12 = load %struct._Object** %array, align 8
  %v = getelementptr inbounds %struct._Object* %12, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 3
  %13 = load i8** %ovalue, align 8
  %14 = bitcast i8* %13 to %struct._Array*
  store %struct._Array* %14, %struct._Array** %base, align 8
  %15 = load %struct._Array** %base, align 8
  %size6 = getelementptr inbounds %struct._Array* %15, i32 0, i32 2
  %16 = load i64* %size6, align 8
  %add = add i64 %16, 1
  %mul = mul i64 40, %add
  %call7 = call i8* @malloc(i64 %mul)
  store i8* %call7, i8** %tmp, align 8
  %tobool = icmp ne i8* %call7, null
  br i1 %tobool, label %if.else10, label %if.then8

if.then8:                                         ; preds = %do.end
  %17 = load %struct.__sFILE** @__stderrp, align 8
  %call9 = call i32 (%struct.__sFILE*, i8*, ...)* @fprintf(%struct.__sFILE* %17, i8* getelementptr inbounds ([34 x i8]* @.str9, i32 0, i32 0))
  br label %if.end29

if.else10:                                        ; preds = %do.end
  %18 = load i8** %tmp, align 8
  %19 = call i64 @llvm.objectsize.i64(i8* %18, i1 false)
  %cmp11 = icmp ne i64 %19, -1
  br i1 %cmp11, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.else10
  %20 = load i8** %tmp, align 8
  %21 = load %struct._Array** %base, align 8
  %list12 = getelementptr inbounds %struct._Array* %21, i32 0, i32 1
  %22 = load %struct._Object*** %list12, align 8
  %23 = bitcast %struct._Object** %22 to i8*
  %24 = load %struct._Array** %base, align 8
  %size13 = getelementptr inbounds %struct._Array* %24, i32 0, i32 2
  %25 = load i64* %size13, align 8
  %mul14 = mul i64 40, %25
  %26 = load i8** %tmp, align 8
  %27 = call i64 @llvm.objectsize.i64(i8* %26, i1 false)
  %call15 = call i8* @__memcpy_chk(i8* %20, i8* %23, i64 %mul14, i64 %27) nounwind
  br label %cond.end

cond.false:                                       ; preds = %if.else10
  %28 = load i8** %tmp, align 8
  %29 = load %struct._Array** %base, align 8
  %list16 = getelementptr inbounds %struct._Array* %29, i32 0, i32 1
  %30 = load %struct._Object*** %list16, align 8
  %31 = bitcast %struct._Object** %30 to i8*
  %32 = load %struct._Array** %base, align 8
  %size17 = getelementptr inbounds %struct._Array* %32, i32 0, i32 2
  %33 = load i64* %size17, align 8
  %mul18 = mul i64 40, %33
  %call19 = call i8* @__inline_memcpy_chk(i8* %28, i8* %31, i64 %mul18)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call15, %cond.true ], [ %call19, %cond.false ]
  %34 = load i8** %tmp, align 8
  %35 = bitcast i8* %34 to %struct._Object**
  %36 = load %struct._Array** %base, align 8
  %list20 = getelementptr inbounds %struct._Array* %36, i32 0, i32 1
  store %struct._Object** %35, %struct._Object*** %list20, align 8
  %37 = load %struct._Object** %value, align 8
  %38 = load %struct._Array** %base, align 8
  %size21 = getelementptr inbounds %struct._Array* %38, i32 0, i32 2
  %39 = load i64* %size21, align 8
  %40 = load %struct._Array** %base, align 8
  %list22 = getelementptr inbounds %struct._Array* %40, i32 0, i32 1
  %41 = load %struct._Object*** %list22, align 8
  %arrayidx23 = getelementptr inbounds %struct._Object** %41, i64 %39
  store %struct._Object* %37, %struct._Object** %arrayidx23, align 8
  %42 = load %struct._Array** %base, align 8
  %size24 = getelementptr inbounds %struct._Array* %42, i32 0, i32 2
  %43 = load i64* %size24, align 8
  %inc = add i64 %43, 1
  store i64 %inc, i64* %size24, align 8
  %call25 = call i8* @malloc(i64 40)
  %44 = bitcast i8* %call25 to %struct._Object*
  store %struct._Object* %44, %struct._Object** %ret, align 8
  %45 = load %struct._Object** %ret, align 8
  %type26 = getelementptr inbounds %struct._Object* %45, i32 0, i32 0
  store i32 0, i32* %type26, align 4
  %46 = load %struct._Array** %base, align 8
  %size27 = getelementptr inbounds %struct._Array* %46, i32 0, i32 2
  %47 = load i64* %size27, align 8
  %48 = load %struct._Object** %ret, align 8
  %v28 = getelementptr inbounds %struct._Object* %48, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v28, i32 0, i32 0
  store i64 %47, i64* %ivalue, align 8
  br label %if.end29

if.end29:                                         ; preds = %cond.end, %if.then8
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then
  %49 = load %struct._Object** %ret, align 8
  ret %struct._Object* %49
}

declare i8* @malloc(i64)

declare i8* @__memcpy_chk(i8*, i8*, i64, i64) nounwind

define internal i8* @__inline_memcpy_chk(i8* %__dest, i8* %__src, i64 %__len) nounwind uwtable inlinehint ssp {
entry:
  %__dest.addr = alloca i8*, align 8
  %__src.addr = alloca i8*, align 8
  %__len.addr = alloca i64, align 8
  store i8* %__dest, i8** %__dest.addr, align 8
  store i8* %__src, i8** %__src.addr, align 8
  store i64 %__len, i64* %__len.addr, align 8
  %0 = load i8** %__dest.addr, align 8
  %1 = load i8** %__src.addr, align 8
  %2 = load i64* %__len.addr, align 8
  %3 = load i8** %__dest.addr, align 8
  %4 = call i64 @llvm.objectsize.i64(i8* %3, i1 false)
  %call = call i8* @__memcpy_chk(i8* %0, i8* %1, i64 %2, i64 %4) nounwind
  ret i8* %call
}

define %struct._Object* @new_Object() nounwind uwtable ssp {
entry:
  %call = call i8* @malloc(i64 40)
  %0 = bitcast i8* %call to %struct._Object*
  ret %struct._Object* %0
}

define %struct._Object* @Object_addObject(%struct._Object* %_a, %struct._Object* %_b) nounwind uwtable ssp {
entry:
  %_a.addr = alloca %struct._Object*, align 8
  %_b.addr = alloca %struct._Object*, align 8
  %ret = alloca %struct._Object*, align 8
  %a = alloca %struct._Object*, align 8
  %b = alloca %struct._Object*, align 8
  store %struct._Object* %_a, %struct._Object** %_a.addr, align 8
  store %struct._Object* %_b, %struct._Object** %_b.addr, align 8
  %call = call i8* @malloc(i64 40)
  %0 = bitcast i8* %call to %struct._Object*
  store %struct._Object* %0, %struct._Object** %ret, align 8
  %1 = load %struct._Object** %_a.addr, align 8
  %type = getelementptr inbounds %struct._Object* %1, i32 0, i32 0
  %2 = load i32* %type, align 4
  %cmp = icmp eq i32 %2, 6
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load %struct._Object** %_a.addr, align 8
  %v = getelementptr inbounds %struct._Object* %3, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 3
  %4 = load i8** %ovalue, align 8
  %5 = bitcast i8* %4 to %struct._Object*
  br label %cond.end

cond.false:                                       ; preds = %entry
  %6 = load %struct._Object** %_a.addr, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._Object* [ %5, %cond.true ], [ %6, %cond.false ]
  store %struct._Object* %cond, %struct._Object** %a, align 8
  %7 = load %struct._Object** %_b.addr, align 8
  %type1 = getelementptr inbounds %struct._Object* %7, i32 0, i32 0
  %8 = load i32* %type1, align 4
  %cmp2 = icmp eq i32 %8, 6
  br i1 %cmp2, label %cond.true3, label %cond.false6

cond.true3:                                       ; preds = %cond.end
  %9 = load %struct._Object** %_b.addr, align 8
  %v4 = getelementptr inbounds %struct._Object* %9, i32 0, i32 1
  %ovalue5 = getelementptr inbounds %struct._Value* %v4, i32 0, i32 3
  %10 = load i8** %ovalue5, align 8
  %11 = bitcast i8* %10 to %struct._Object*
  br label %cond.end7

cond.false6:                                      ; preds = %cond.end
  %12 = load %struct._Object** %_b.addr, align 8
  br label %cond.end7

cond.end7:                                        ; preds = %cond.false6, %cond.true3
  %cond8 = phi %struct._Object* [ %11, %cond.true3 ], [ %12, %cond.false6 ]
  store %struct._Object* %cond8, %struct._Object** %b, align 8
  br label %do.body

do.body:                                          ; preds = %cond.end7
  %13 = load %struct._Object** %a, align 8
  %type9 = getelementptr inbounds %struct._Object* %13, i32 0, i32 0
  %14 = load i32* %type9, align 4
  switch i32 %14, label %sw.default50 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb26
  ]

sw.bb:                                            ; preds = %do.body
  %15 = load %struct._Object** %b, align 8
  %type10 = getelementptr inbounds %struct._Object* %15, i32 0, i32 0
  %16 = load i32* %type10, align 4
  switch i32 %16, label %sw.default [
    i32 0, label %sw.bb11
    i32 1, label %sw.bb18
  ]

sw.bb11:                                          ; preds = %sw.bb
  %17 = load %struct._Object** %ret, align 8
  %type12 = getelementptr inbounds %struct._Object* %17, i32 0, i32 0
  store i32 0, i32* %type12, align 4
  %18 = load %struct._Object** %a, align 8
  %v13 = getelementptr inbounds %struct._Object* %18, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v13, i32 0, i32 0
  %19 = load i64* %ivalue, align 8
  %20 = load %struct._Object** %b, align 8
  %v14 = getelementptr inbounds %struct._Object* %20, i32 0, i32 1
  %ivalue15 = getelementptr inbounds %struct._Value* %v14, i32 0, i32 0
  %21 = load i64* %ivalue15, align 8
  %add = add nsw i64 %19, %21
  %22 = load %struct._Object** %ret, align 8
  %v16 = getelementptr inbounds %struct._Object* %22, i32 0, i32 1
  %ivalue17 = getelementptr inbounds %struct._Value* %v16, i32 0, i32 0
  store i64 %add, i64* %ivalue17, align 8
  br label %sw.epilog

sw.bb18:                                          ; preds = %sw.bb
  %23 = load %struct._Object** %ret, align 8
  %type19 = getelementptr inbounds %struct._Object* %23, i32 0, i32 0
  store i32 1, i32* %type19, align 4
  %24 = load %struct._Object** %a, align 8
  %v20 = getelementptr inbounds %struct._Object* %24, i32 0, i32 1
  %ivalue21 = getelementptr inbounds %struct._Value* %v20, i32 0, i32 0
  %25 = load i64* %ivalue21, align 8
  %conv = sitofp i64 %25 to double
  %26 = load %struct._Object** %b, align 8
  %v22 = getelementptr inbounds %struct._Object* %26, i32 0, i32 1
  %dvalue = getelementptr inbounds %struct._Value* %v22, i32 0, i32 1
  %27 = load double* %dvalue, align 8
  %add23 = fadd double %conv, %27
  %28 = load %struct._Object** %ret, align 8
  %v24 = getelementptr inbounds %struct._Object* %28, i32 0, i32 1
  %dvalue25 = getelementptr inbounds %struct._Value* %v24, i32 0, i32 1
  store double %add23, double* %dvalue25, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %sw.bb
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb18, %sw.bb11
  br label %sw.epilog51

sw.bb26:                                          ; preds = %do.body
  %29 = load %struct._Object** %ret, align 8
  %type27 = getelementptr inbounds %struct._Object* %29, i32 0, i32 0
  store i32 1, i32* %type27, align 4
  %30 = load %struct._Object** %b, align 8
  %type28 = getelementptr inbounds %struct._Object* %30, i32 0, i32 0
  %31 = load i32* %type28, align 4
  switch i32 %31, label %sw.default48 [
    i32 0, label %sw.bb29
    i32 1, label %sw.bb39
  ]

sw.bb29:                                          ; preds = %sw.bb26
  %32 = load %struct._Object** %ret, align 8
  %type30 = getelementptr inbounds %struct._Object* %32, i32 0, i32 0
  store i32 0, i32* %type30, align 4
  %33 = load %struct._Object** %a, align 8
  %v31 = getelementptr inbounds %struct._Object* %33, i32 0, i32 1
  %dvalue32 = getelementptr inbounds %struct._Value* %v31, i32 0, i32 1
  %34 = load double* %dvalue32, align 8
  %35 = load %struct._Object** %b, align 8
  %v33 = getelementptr inbounds %struct._Object* %35, i32 0, i32 1
  %ivalue34 = getelementptr inbounds %struct._Value* %v33, i32 0, i32 0
  %36 = load i64* %ivalue34, align 8
  %conv35 = sitofp i64 %36 to double
  %add36 = fadd double %34, %conv35
  %37 = load %struct._Object** %ret, align 8
  %v37 = getelementptr inbounds %struct._Object* %37, i32 0, i32 1
  %dvalue38 = getelementptr inbounds %struct._Value* %v37, i32 0, i32 1
  store double %add36, double* %dvalue38, align 8
  br label %sw.epilog49

sw.bb39:                                          ; preds = %sw.bb26
  %38 = load %struct._Object** %ret, align 8
  %type40 = getelementptr inbounds %struct._Object* %38, i32 0, i32 0
  store i32 1, i32* %type40, align 4
  %39 = load %struct._Object** %a, align 8
  %v41 = getelementptr inbounds %struct._Object* %39, i32 0, i32 1
  %dvalue42 = getelementptr inbounds %struct._Value* %v41, i32 0, i32 1
  %40 = load double* %dvalue42, align 8
  %41 = load %struct._Object** %b, align 8
  %v43 = getelementptr inbounds %struct._Object* %41, i32 0, i32 1
  %dvalue44 = getelementptr inbounds %struct._Value* %v43, i32 0, i32 1
  %42 = load double* %dvalue44, align 8
  %add45 = fadd double %40, %42
  %43 = load %struct._Object** %ret, align 8
  %v46 = getelementptr inbounds %struct._Object* %43, i32 0, i32 1
  %dvalue47 = getelementptr inbounds %struct._Value* %v46, i32 0, i32 1
  store double %add45, double* %dvalue47, align 8
  br label %sw.epilog49

sw.default48:                                     ; preds = %sw.bb26
  br label %sw.epilog49

sw.epilog49:                                      ; preds = %sw.default48, %sw.bb39, %sw.bb29
  br label %sw.epilog51

sw.default50:                                     ; preds = %do.body
  br label %sw.epilog51

sw.epilog51:                                      ; preds = %sw.default50, %sw.epilog49, %sw.epilog
  br label %do.end

do.end:                                           ; preds = %sw.epilog51
  %44 = load %struct._Object** %ret, align 8
  ret %struct._Object* %44
}

define %struct._Object* @Object_subObject(%struct._Object* %_a, %struct._Object* %_b) nounwind uwtable ssp {
entry:
  %_a.addr = alloca %struct._Object*, align 8
  %_b.addr = alloca %struct._Object*, align 8
  %ret = alloca %struct._Object*, align 8
  %a = alloca %struct._Object*, align 8
  %b = alloca %struct._Object*, align 8
  store %struct._Object* %_a, %struct._Object** %_a.addr, align 8
  store %struct._Object* %_b, %struct._Object** %_b.addr, align 8
  %call = call i8* @malloc(i64 40)
  %0 = bitcast i8* %call to %struct._Object*
  store %struct._Object* %0, %struct._Object** %ret, align 8
  %1 = load %struct._Object** %_a.addr, align 8
  %v = getelementptr inbounds %struct._Object* %1, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 3
  %2 = load i8** %ovalue, align 8
  %3 = bitcast i8* %2 to %struct._Object*
  store %struct._Object* %3, %struct._Object** %a, align 8
  %4 = load %struct._Object** %_b.addr, align 8
  %v1 = getelementptr inbounds %struct._Object* %4, i32 0, i32 1
  %ovalue2 = getelementptr inbounds %struct._Value* %v1, i32 0, i32 3
  %5 = load i8** %ovalue2, align 8
  %6 = bitcast i8* %5 to %struct._Object*
  store %struct._Object* %6, %struct._Object** %b, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %7 = load %struct._Object** %a, align 8
  %type = getelementptr inbounds %struct._Object* %7, i32 0, i32 0
  %8 = load i32* %type, align 4
  switch i32 %8, label %sw.default43 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb19
  ]

sw.bb:                                            ; preds = %do.body
  %9 = load %struct._Object** %b, align 8
  %type3 = getelementptr inbounds %struct._Object* %9, i32 0, i32 0
  %10 = load i32* %type3, align 4
  switch i32 %10, label %sw.default [
    i32 0, label %sw.bb4
    i32 1, label %sw.bb11
  ]

sw.bb4:                                           ; preds = %sw.bb
  %11 = load %struct._Object** %ret, align 8
  %type5 = getelementptr inbounds %struct._Object* %11, i32 0, i32 0
  store i32 0, i32* %type5, align 4
  %12 = load %struct._Object** %a, align 8
  %v6 = getelementptr inbounds %struct._Object* %12, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v6, i32 0, i32 0
  %13 = load i64* %ivalue, align 8
  %14 = load %struct._Object** %b, align 8
  %v7 = getelementptr inbounds %struct._Object* %14, i32 0, i32 1
  %ivalue8 = getelementptr inbounds %struct._Value* %v7, i32 0, i32 0
  %15 = load i64* %ivalue8, align 8
  %sub = sub nsw i64 %13, %15
  %16 = load %struct._Object** %ret, align 8
  %v9 = getelementptr inbounds %struct._Object* %16, i32 0, i32 1
  %ivalue10 = getelementptr inbounds %struct._Value* %v9, i32 0, i32 0
  store i64 %sub, i64* %ivalue10, align 8
  br label %sw.epilog

sw.bb11:                                          ; preds = %sw.bb
  %17 = load %struct._Object** %ret, align 8
  %type12 = getelementptr inbounds %struct._Object* %17, i32 0, i32 0
  store i32 1, i32* %type12, align 4
  %18 = load %struct._Object** %a, align 8
  %v13 = getelementptr inbounds %struct._Object* %18, i32 0, i32 1
  %ivalue14 = getelementptr inbounds %struct._Value* %v13, i32 0, i32 0
  %19 = load i64* %ivalue14, align 8
  %conv = sitofp i64 %19 to double
  %20 = load %struct._Object** %b, align 8
  %v15 = getelementptr inbounds %struct._Object* %20, i32 0, i32 1
  %dvalue = getelementptr inbounds %struct._Value* %v15, i32 0, i32 1
  %21 = load double* %dvalue, align 8
  %sub16 = fsub double %conv, %21
  %22 = load %struct._Object** %ret, align 8
  %v17 = getelementptr inbounds %struct._Object* %22, i32 0, i32 1
  %dvalue18 = getelementptr inbounds %struct._Value* %v17, i32 0, i32 1
  store double %sub16, double* %dvalue18, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %sw.bb
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb11, %sw.bb4
  br label %sw.epilog44

sw.bb19:                                          ; preds = %do.body
  %23 = load %struct._Object** %ret, align 8
  %type20 = getelementptr inbounds %struct._Object* %23, i32 0, i32 0
  store i32 1, i32* %type20, align 4
  %24 = load %struct._Object** %b, align 8
  %type21 = getelementptr inbounds %struct._Object* %24, i32 0, i32 0
  %25 = load i32* %type21, align 4
  switch i32 %25, label %sw.default41 [
    i32 0, label %sw.bb22
    i32 1, label %sw.bb32
  ]

sw.bb22:                                          ; preds = %sw.bb19
  %26 = load %struct._Object** %ret, align 8
  %type23 = getelementptr inbounds %struct._Object* %26, i32 0, i32 0
  store i32 0, i32* %type23, align 4
  %27 = load %struct._Object** %a, align 8
  %v24 = getelementptr inbounds %struct._Object* %27, i32 0, i32 1
  %dvalue25 = getelementptr inbounds %struct._Value* %v24, i32 0, i32 1
  %28 = load double* %dvalue25, align 8
  %29 = load %struct._Object** %b, align 8
  %v26 = getelementptr inbounds %struct._Object* %29, i32 0, i32 1
  %ivalue27 = getelementptr inbounds %struct._Value* %v26, i32 0, i32 0
  %30 = load i64* %ivalue27, align 8
  %conv28 = sitofp i64 %30 to double
  %sub29 = fsub double %28, %conv28
  %31 = load %struct._Object** %ret, align 8
  %v30 = getelementptr inbounds %struct._Object* %31, i32 0, i32 1
  %dvalue31 = getelementptr inbounds %struct._Value* %v30, i32 0, i32 1
  store double %sub29, double* %dvalue31, align 8
  br label %sw.epilog42

sw.bb32:                                          ; preds = %sw.bb19
  %32 = load %struct._Object** %ret, align 8
  %type33 = getelementptr inbounds %struct._Object* %32, i32 0, i32 0
  store i32 1, i32* %type33, align 4
  %33 = load %struct._Object** %a, align 8
  %v34 = getelementptr inbounds %struct._Object* %33, i32 0, i32 1
  %dvalue35 = getelementptr inbounds %struct._Value* %v34, i32 0, i32 1
  %34 = load double* %dvalue35, align 8
  %35 = load %struct._Object** %b, align 8
  %v36 = getelementptr inbounds %struct._Object* %35, i32 0, i32 1
  %dvalue37 = getelementptr inbounds %struct._Value* %v36, i32 0, i32 1
  %36 = load double* %dvalue37, align 8
  %sub38 = fsub double %34, %36
  %37 = load %struct._Object** %ret, align 8
  %v39 = getelementptr inbounds %struct._Object* %37, i32 0, i32 1
  %dvalue40 = getelementptr inbounds %struct._Value* %v39, i32 0, i32 1
  store double %sub38, double* %dvalue40, align 8
  br label %sw.epilog42

sw.default41:                                     ; preds = %sw.bb19
  br label %sw.epilog42

sw.epilog42:                                      ; preds = %sw.default41, %sw.bb32, %sw.bb22
  br label %sw.epilog44

sw.default43:                                     ; preds = %do.body
  br label %sw.epilog44

sw.epilog44:                                      ; preds = %sw.default43, %sw.epilog42, %sw.epilog
  br label %do.end

do.end:                                           ; preds = %sw.epilog44
  %38 = load %struct._Object** %ret, align 8
  ret %struct._Object* %38
}

define %struct._Object* @Object_mulObject(%struct._Object* %_a, %struct._Object* %_b) nounwind uwtable ssp {
entry:
  %_a.addr = alloca %struct._Object*, align 8
  %_b.addr = alloca %struct._Object*, align 8
  %ret = alloca %struct._Object*, align 8
  %a = alloca %struct._Object*, align 8
  %b = alloca %struct._Object*, align 8
  store %struct._Object* %_a, %struct._Object** %_a.addr, align 8
  store %struct._Object* %_b, %struct._Object** %_b.addr, align 8
  %call = call i8* @malloc(i64 40)
  %0 = bitcast i8* %call to %struct._Object*
  store %struct._Object* %0, %struct._Object** %ret, align 8
  %1 = load %struct._Object** %_a.addr, align 8
  %v = getelementptr inbounds %struct._Object* %1, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 3
  %2 = load i8** %ovalue, align 8
  %3 = bitcast i8* %2 to %struct._Object*
  store %struct._Object* %3, %struct._Object** %a, align 8
  %4 = load %struct._Object** %_b.addr, align 8
  %v1 = getelementptr inbounds %struct._Object* %4, i32 0, i32 1
  %ovalue2 = getelementptr inbounds %struct._Value* %v1, i32 0, i32 3
  %5 = load i8** %ovalue2, align 8
  %6 = bitcast i8* %5 to %struct._Object*
  store %struct._Object* %6, %struct._Object** %b, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %7 = load %struct._Object** %a, align 8
  %type = getelementptr inbounds %struct._Object* %7, i32 0, i32 0
  %8 = load i32* %type, align 4
  switch i32 %8, label %sw.default43 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb19
  ]

sw.bb:                                            ; preds = %do.body
  %9 = load %struct._Object** %b, align 8
  %type3 = getelementptr inbounds %struct._Object* %9, i32 0, i32 0
  %10 = load i32* %type3, align 4
  switch i32 %10, label %sw.default [
    i32 0, label %sw.bb4
    i32 1, label %sw.bb11
  ]

sw.bb4:                                           ; preds = %sw.bb
  %11 = load %struct._Object** %ret, align 8
  %type5 = getelementptr inbounds %struct._Object* %11, i32 0, i32 0
  store i32 0, i32* %type5, align 4
  %12 = load %struct._Object** %a, align 8
  %v6 = getelementptr inbounds %struct._Object* %12, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v6, i32 0, i32 0
  %13 = load i64* %ivalue, align 8
  %14 = load %struct._Object** %b, align 8
  %v7 = getelementptr inbounds %struct._Object* %14, i32 0, i32 1
  %ivalue8 = getelementptr inbounds %struct._Value* %v7, i32 0, i32 0
  %15 = load i64* %ivalue8, align 8
  %mul = mul nsw i64 %13, %15
  %16 = load %struct._Object** %ret, align 8
  %v9 = getelementptr inbounds %struct._Object* %16, i32 0, i32 1
  %ivalue10 = getelementptr inbounds %struct._Value* %v9, i32 0, i32 0
  store i64 %mul, i64* %ivalue10, align 8
  br label %sw.epilog

sw.bb11:                                          ; preds = %sw.bb
  %17 = load %struct._Object** %ret, align 8
  %type12 = getelementptr inbounds %struct._Object* %17, i32 0, i32 0
  store i32 1, i32* %type12, align 4
  %18 = load %struct._Object** %a, align 8
  %v13 = getelementptr inbounds %struct._Object* %18, i32 0, i32 1
  %ivalue14 = getelementptr inbounds %struct._Value* %v13, i32 0, i32 0
  %19 = load i64* %ivalue14, align 8
  %conv = sitofp i64 %19 to double
  %20 = load %struct._Object** %b, align 8
  %v15 = getelementptr inbounds %struct._Object* %20, i32 0, i32 1
  %dvalue = getelementptr inbounds %struct._Value* %v15, i32 0, i32 1
  %21 = load double* %dvalue, align 8
  %mul16 = fmul double %conv, %21
  %22 = load %struct._Object** %ret, align 8
  %v17 = getelementptr inbounds %struct._Object* %22, i32 0, i32 1
  %dvalue18 = getelementptr inbounds %struct._Value* %v17, i32 0, i32 1
  store double %mul16, double* %dvalue18, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %sw.bb
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb11, %sw.bb4
  br label %sw.epilog44

sw.bb19:                                          ; preds = %do.body
  %23 = load %struct._Object** %ret, align 8
  %type20 = getelementptr inbounds %struct._Object* %23, i32 0, i32 0
  store i32 1, i32* %type20, align 4
  %24 = load %struct._Object** %b, align 8
  %type21 = getelementptr inbounds %struct._Object* %24, i32 0, i32 0
  %25 = load i32* %type21, align 4
  switch i32 %25, label %sw.default41 [
    i32 0, label %sw.bb22
    i32 1, label %sw.bb32
  ]

sw.bb22:                                          ; preds = %sw.bb19
  %26 = load %struct._Object** %ret, align 8
  %type23 = getelementptr inbounds %struct._Object* %26, i32 0, i32 0
  store i32 0, i32* %type23, align 4
  %27 = load %struct._Object** %a, align 8
  %v24 = getelementptr inbounds %struct._Object* %27, i32 0, i32 1
  %dvalue25 = getelementptr inbounds %struct._Value* %v24, i32 0, i32 1
  %28 = load double* %dvalue25, align 8
  %29 = load %struct._Object** %b, align 8
  %v26 = getelementptr inbounds %struct._Object* %29, i32 0, i32 1
  %ivalue27 = getelementptr inbounds %struct._Value* %v26, i32 0, i32 0
  %30 = load i64* %ivalue27, align 8
  %conv28 = sitofp i64 %30 to double
  %mul29 = fmul double %28, %conv28
  %31 = load %struct._Object** %ret, align 8
  %v30 = getelementptr inbounds %struct._Object* %31, i32 0, i32 1
  %dvalue31 = getelementptr inbounds %struct._Value* %v30, i32 0, i32 1
  store double %mul29, double* %dvalue31, align 8
  br label %sw.epilog42

sw.bb32:                                          ; preds = %sw.bb19
  %32 = load %struct._Object** %ret, align 8
  %type33 = getelementptr inbounds %struct._Object* %32, i32 0, i32 0
  store i32 1, i32* %type33, align 4
  %33 = load %struct._Object** %a, align 8
  %v34 = getelementptr inbounds %struct._Object* %33, i32 0, i32 1
  %dvalue35 = getelementptr inbounds %struct._Value* %v34, i32 0, i32 1
  %34 = load double* %dvalue35, align 8
  %35 = load %struct._Object** %b, align 8
  %v36 = getelementptr inbounds %struct._Object* %35, i32 0, i32 1
  %dvalue37 = getelementptr inbounds %struct._Value* %v36, i32 0, i32 1
  %36 = load double* %dvalue37, align 8
  %mul38 = fmul double %34, %36
  %37 = load %struct._Object** %ret, align 8
  %v39 = getelementptr inbounds %struct._Object* %37, i32 0, i32 1
  %dvalue40 = getelementptr inbounds %struct._Value* %v39, i32 0, i32 1
  store double %mul38, double* %dvalue40, align 8
  br label %sw.epilog42

sw.default41:                                     ; preds = %sw.bb19
  br label %sw.epilog42

sw.epilog42:                                      ; preds = %sw.default41, %sw.bb32, %sw.bb22
  br label %sw.epilog44

sw.default43:                                     ; preds = %do.body
  br label %sw.epilog44

sw.epilog44:                                      ; preds = %sw.default43, %sw.epilog42, %sw.epilog
  br label %do.end

do.end:                                           ; preds = %sw.epilog44
  %38 = load %struct._Object** %ret, align 8
  ret %struct._Object* %38
}

define %struct._Object* @Object_divObject(%struct._Object* %_a, %struct._Object* %_b) nounwind uwtable ssp {
entry:
  %_a.addr = alloca %struct._Object*, align 8
  %_b.addr = alloca %struct._Object*, align 8
  %ret = alloca %struct._Object*, align 8
  %a = alloca %struct._Object*, align 8
  %b = alloca %struct._Object*, align 8
  store %struct._Object* %_a, %struct._Object** %_a.addr, align 8
  store %struct._Object* %_b, %struct._Object** %_b.addr, align 8
  %call = call i8* @malloc(i64 40)
  %0 = bitcast i8* %call to %struct._Object*
  store %struct._Object* %0, %struct._Object** %ret, align 8
  %1 = load %struct._Object** %_a.addr, align 8
  %v = getelementptr inbounds %struct._Object* %1, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 3
  %2 = load i8** %ovalue, align 8
  %3 = bitcast i8* %2 to %struct._Object*
  store %struct._Object* %3, %struct._Object** %a, align 8
  %4 = load %struct._Object** %_b.addr, align 8
  %v1 = getelementptr inbounds %struct._Object* %4, i32 0, i32 1
  %ovalue2 = getelementptr inbounds %struct._Value* %v1, i32 0, i32 3
  %5 = load i8** %ovalue2, align 8
  %6 = bitcast i8* %5 to %struct._Object*
  store %struct._Object* %6, %struct._Object** %b, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %7 = load %struct._Object** %a, align 8
  %type = getelementptr inbounds %struct._Object* %7, i32 0, i32 0
  %8 = load i32* %type, align 4
  switch i32 %8, label %sw.default43 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb19
  ]

sw.bb:                                            ; preds = %do.body
  %9 = load %struct._Object** %b, align 8
  %type3 = getelementptr inbounds %struct._Object* %9, i32 0, i32 0
  %10 = load i32* %type3, align 4
  switch i32 %10, label %sw.default [
    i32 0, label %sw.bb4
    i32 1, label %sw.bb11
  ]

sw.bb4:                                           ; preds = %sw.bb
  %11 = load %struct._Object** %ret, align 8
  %type5 = getelementptr inbounds %struct._Object* %11, i32 0, i32 0
  store i32 0, i32* %type5, align 4
  %12 = load %struct._Object** %a, align 8
  %v6 = getelementptr inbounds %struct._Object* %12, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v6, i32 0, i32 0
  %13 = load i64* %ivalue, align 8
  %14 = load %struct._Object** %b, align 8
  %v7 = getelementptr inbounds %struct._Object* %14, i32 0, i32 1
  %ivalue8 = getelementptr inbounds %struct._Value* %v7, i32 0, i32 0
  %15 = load i64* %ivalue8, align 8
  %div = sdiv i64 %13, %15
  %16 = load %struct._Object** %ret, align 8
  %v9 = getelementptr inbounds %struct._Object* %16, i32 0, i32 1
  %ivalue10 = getelementptr inbounds %struct._Value* %v9, i32 0, i32 0
  store i64 %div, i64* %ivalue10, align 8
  br label %sw.epilog

sw.bb11:                                          ; preds = %sw.bb
  %17 = load %struct._Object** %ret, align 8
  %type12 = getelementptr inbounds %struct._Object* %17, i32 0, i32 0
  store i32 1, i32* %type12, align 4
  %18 = load %struct._Object** %a, align 8
  %v13 = getelementptr inbounds %struct._Object* %18, i32 0, i32 1
  %ivalue14 = getelementptr inbounds %struct._Value* %v13, i32 0, i32 0
  %19 = load i64* %ivalue14, align 8
  %conv = sitofp i64 %19 to double
  %20 = load %struct._Object** %b, align 8
  %v15 = getelementptr inbounds %struct._Object* %20, i32 0, i32 1
  %dvalue = getelementptr inbounds %struct._Value* %v15, i32 0, i32 1
  %21 = load double* %dvalue, align 8
  %div16 = fdiv double %conv, %21
  %22 = load %struct._Object** %ret, align 8
  %v17 = getelementptr inbounds %struct._Object* %22, i32 0, i32 1
  %dvalue18 = getelementptr inbounds %struct._Value* %v17, i32 0, i32 1
  store double %div16, double* %dvalue18, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %sw.bb
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb11, %sw.bb4
  br label %sw.epilog44

sw.bb19:                                          ; preds = %do.body
  %23 = load %struct._Object** %ret, align 8
  %type20 = getelementptr inbounds %struct._Object* %23, i32 0, i32 0
  store i32 1, i32* %type20, align 4
  %24 = load %struct._Object** %b, align 8
  %type21 = getelementptr inbounds %struct._Object* %24, i32 0, i32 0
  %25 = load i32* %type21, align 4
  switch i32 %25, label %sw.default41 [
    i32 0, label %sw.bb22
    i32 1, label %sw.bb32
  ]

sw.bb22:                                          ; preds = %sw.bb19
  %26 = load %struct._Object** %ret, align 8
  %type23 = getelementptr inbounds %struct._Object* %26, i32 0, i32 0
  store i32 0, i32* %type23, align 4
  %27 = load %struct._Object** %a, align 8
  %v24 = getelementptr inbounds %struct._Object* %27, i32 0, i32 1
  %dvalue25 = getelementptr inbounds %struct._Value* %v24, i32 0, i32 1
  %28 = load double* %dvalue25, align 8
  %29 = load %struct._Object** %b, align 8
  %v26 = getelementptr inbounds %struct._Object* %29, i32 0, i32 1
  %ivalue27 = getelementptr inbounds %struct._Value* %v26, i32 0, i32 0
  %30 = load i64* %ivalue27, align 8
  %conv28 = sitofp i64 %30 to double
  %div29 = fdiv double %28, %conv28
  %31 = load %struct._Object** %ret, align 8
  %v30 = getelementptr inbounds %struct._Object* %31, i32 0, i32 1
  %dvalue31 = getelementptr inbounds %struct._Value* %v30, i32 0, i32 1
  store double %div29, double* %dvalue31, align 8
  br label %sw.epilog42

sw.bb32:                                          ; preds = %sw.bb19
  %32 = load %struct._Object** %ret, align 8
  %type33 = getelementptr inbounds %struct._Object* %32, i32 0, i32 0
  store i32 1, i32* %type33, align 4
  %33 = load %struct._Object** %a, align 8
  %v34 = getelementptr inbounds %struct._Object* %33, i32 0, i32 1
  %dvalue35 = getelementptr inbounds %struct._Value* %v34, i32 0, i32 1
  %34 = load double* %dvalue35, align 8
  %35 = load %struct._Object** %b, align 8
  %v36 = getelementptr inbounds %struct._Object* %35, i32 0, i32 1
  %dvalue37 = getelementptr inbounds %struct._Value* %v36, i32 0, i32 1
  %36 = load double* %dvalue37, align 8
  %div38 = fdiv double %34, %36
  %37 = load %struct._Object** %ret, align 8
  %v39 = getelementptr inbounds %struct._Object* %37, i32 0, i32 1
  %dvalue40 = getelementptr inbounds %struct._Value* %v39, i32 0, i32 1
  store double %div38, double* %dvalue40, align 8
  br label %sw.epilog42

sw.default41:                                     ; preds = %sw.bb19
  br label %sw.epilog42

sw.epilog42:                                      ; preds = %sw.default41, %sw.bb32, %sw.bb22
  br label %sw.epilog44

sw.default43:                                     ; preds = %do.body
  br label %sw.epilog44

sw.epilog44:                                      ; preds = %sw.default43, %sw.epilog42, %sw.epilog
  br label %do.end

do.end:                                           ; preds = %sw.epilog44
  %38 = load %struct._Object** %ret, align 8
  ret %struct._Object* %38
}

define %struct._Object* @Object_eqObject(%struct._Object* %_a, %struct._Object* %_b) nounwind uwtable ssp {
entry:
  %_a.addr = alloca %struct._Object*, align 8
  %_b.addr = alloca %struct._Object*, align 8
  %ret = alloca %struct._Object*, align 8
  %a = alloca %struct._Object*, align 8
  %b = alloca %struct._Object*, align 8
  store %struct._Object* %_a, %struct._Object** %_a.addr, align 8
  store %struct._Object* %_b, %struct._Object** %_b.addr, align 8
  %call = call i8* @malloc(i64 40)
  %0 = bitcast i8* %call to %struct._Object*
  store %struct._Object* %0, %struct._Object** %ret, align 8
  %1 = load %struct._Object** %_a.addr, align 8
  %v = getelementptr inbounds %struct._Object* %1, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 3
  %2 = load i8** %ovalue, align 8
  %3 = bitcast i8* %2 to %struct._Object*
  store %struct._Object* %3, %struct._Object** %a, align 8
  %4 = load %struct._Object** %_b.addr, align 8
  %v1 = getelementptr inbounds %struct._Object* %4, i32 0, i32 1
  %ovalue2 = getelementptr inbounds %struct._Value* %v1, i32 0, i32 3
  %5 = load i8** %ovalue2, align 8
  %6 = bitcast i8* %5 to %struct._Object*
  store %struct._Object* %6, %struct._Object** %b, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %7 = load %struct._Object** %a, align 8
  %type = getelementptr inbounds %struct._Object* %7, i32 0, i32 0
  %8 = load i32* %type, align 4
  switch i32 %8, label %sw.default51 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb23
  ]

sw.bb:                                            ; preds = %do.body
  %9 = load %struct._Object** %b, align 8
  %type3 = getelementptr inbounds %struct._Object* %9, i32 0, i32 0
  %10 = load i32* %type3, align 4
  switch i32 %10, label %sw.default [
    i32 0, label %sw.bb4
    i32 1, label %sw.bb12
  ]

sw.bb4:                                           ; preds = %sw.bb
  %11 = load %struct._Object** %ret, align 8
  %type5 = getelementptr inbounds %struct._Object* %11, i32 0, i32 0
  store i32 0, i32* %type5, align 4
  %12 = load %struct._Object** %a, align 8
  %v6 = getelementptr inbounds %struct._Object* %12, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v6, i32 0, i32 0
  %13 = load i64* %ivalue, align 8
  %14 = load %struct._Object** %b, align 8
  %v7 = getelementptr inbounds %struct._Object* %14, i32 0, i32 1
  %ivalue8 = getelementptr inbounds %struct._Value* %v7, i32 0, i32 0
  %15 = load i64* %ivalue8, align 8
  %cmp = icmp eq i64 %13, %15
  %conv = zext i1 %cmp to i32
  %conv9 = sext i32 %conv to i64
  %16 = load %struct._Object** %ret, align 8
  %v10 = getelementptr inbounds %struct._Object* %16, i32 0, i32 1
  %ivalue11 = getelementptr inbounds %struct._Value* %v10, i32 0, i32 0
  store i64 %conv9, i64* %ivalue11, align 8
  br label %sw.epilog

sw.bb12:                                          ; preds = %sw.bb
  %17 = load %struct._Object** %ret, align 8
  %type13 = getelementptr inbounds %struct._Object* %17, i32 0, i32 0
  store i32 1, i32* %type13, align 4
  %18 = load %struct._Object** %a, align 8
  %v14 = getelementptr inbounds %struct._Object* %18, i32 0, i32 1
  %ivalue15 = getelementptr inbounds %struct._Value* %v14, i32 0, i32 0
  %19 = load i64* %ivalue15, align 8
  %conv16 = sitofp i64 %19 to double
  %20 = load %struct._Object** %b, align 8
  %v17 = getelementptr inbounds %struct._Object* %20, i32 0, i32 1
  %dvalue = getelementptr inbounds %struct._Value* %v17, i32 0, i32 1
  %21 = load double* %dvalue, align 8
  %cmp18 = fcmp oeq double %conv16, %21
  %conv19 = zext i1 %cmp18 to i32
  %conv20 = sitofp i32 %conv19 to double
  %22 = load %struct._Object** %ret, align 8
  %v21 = getelementptr inbounds %struct._Object* %22, i32 0, i32 1
  %dvalue22 = getelementptr inbounds %struct._Value* %v21, i32 0, i32 1
  store double %conv20, double* %dvalue22, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %sw.bb
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb12, %sw.bb4
  br label %sw.epilog52

sw.bb23:                                          ; preds = %do.body
  %23 = load %struct._Object** %ret, align 8
  %type24 = getelementptr inbounds %struct._Object* %23, i32 0, i32 0
  store i32 1, i32* %type24, align 4
  %24 = load %struct._Object** %b, align 8
  %type25 = getelementptr inbounds %struct._Object* %24, i32 0, i32 0
  %25 = load i32* %type25, align 4
  switch i32 %25, label %sw.default49 [
    i32 0, label %sw.bb26
    i32 1, label %sw.bb38
  ]

sw.bb26:                                          ; preds = %sw.bb23
  %26 = load %struct._Object** %ret, align 8
  %type27 = getelementptr inbounds %struct._Object* %26, i32 0, i32 0
  store i32 0, i32* %type27, align 4
  %27 = load %struct._Object** %a, align 8
  %v28 = getelementptr inbounds %struct._Object* %27, i32 0, i32 1
  %dvalue29 = getelementptr inbounds %struct._Value* %v28, i32 0, i32 1
  %28 = load double* %dvalue29, align 8
  %29 = load %struct._Object** %b, align 8
  %v30 = getelementptr inbounds %struct._Object* %29, i32 0, i32 1
  %ivalue31 = getelementptr inbounds %struct._Value* %v30, i32 0, i32 0
  %30 = load i64* %ivalue31, align 8
  %conv32 = sitofp i64 %30 to double
  %cmp33 = fcmp oeq double %28, %conv32
  %conv34 = zext i1 %cmp33 to i32
  %conv35 = sitofp i32 %conv34 to double
  %31 = load %struct._Object** %ret, align 8
  %v36 = getelementptr inbounds %struct._Object* %31, i32 0, i32 1
  %dvalue37 = getelementptr inbounds %struct._Value* %v36, i32 0, i32 1
  store double %conv35, double* %dvalue37, align 8
  br label %sw.epilog50

sw.bb38:                                          ; preds = %sw.bb23
  %32 = load %struct._Object** %ret, align 8
  %type39 = getelementptr inbounds %struct._Object* %32, i32 0, i32 0
  store i32 1, i32* %type39, align 4
  %33 = load %struct._Object** %a, align 8
  %v40 = getelementptr inbounds %struct._Object* %33, i32 0, i32 1
  %dvalue41 = getelementptr inbounds %struct._Value* %v40, i32 0, i32 1
  %34 = load double* %dvalue41, align 8
  %35 = load %struct._Object** %b, align 8
  %v42 = getelementptr inbounds %struct._Object* %35, i32 0, i32 1
  %dvalue43 = getelementptr inbounds %struct._Value* %v42, i32 0, i32 1
  %36 = load double* %dvalue43, align 8
  %cmp44 = fcmp oeq double %34, %36
  %conv45 = zext i1 %cmp44 to i32
  %conv46 = sitofp i32 %conv45 to double
  %37 = load %struct._Object** %ret, align 8
  %v47 = getelementptr inbounds %struct._Object* %37, i32 0, i32 1
  %dvalue48 = getelementptr inbounds %struct._Value* %v47, i32 0, i32 1
  store double %conv46, double* %dvalue48, align 8
  br label %sw.epilog50

sw.default49:                                     ; preds = %sw.bb23
  br label %sw.epilog50

sw.epilog50:                                      ; preds = %sw.default49, %sw.bb38, %sw.bb26
  br label %sw.epilog52

sw.default51:                                     ; preds = %do.body
  br label %sw.epilog52

sw.epilog52:                                      ; preds = %sw.default51, %sw.epilog50, %sw.epilog
  br label %do.end

do.end:                                           ; preds = %sw.epilog52
  %38 = load %struct._Object** %ret, align 8
  ret %struct._Object* %38
}

define %struct._Object* @Object_neObject(%struct._Object* %_a, %struct._Object* %_b) nounwind uwtable ssp {
entry:
  %_a.addr = alloca %struct._Object*, align 8
  %_b.addr = alloca %struct._Object*, align 8
  %ret = alloca %struct._Object*, align 8
  %a = alloca %struct._Object*, align 8
  %b = alloca %struct._Object*, align 8
  store %struct._Object* %_a, %struct._Object** %_a.addr, align 8
  store %struct._Object* %_b, %struct._Object** %_b.addr, align 8
  %call = call i8* @malloc(i64 40)
  %0 = bitcast i8* %call to %struct._Object*
  store %struct._Object* %0, %struct._Object** %ret, align 8
  %1 = load %struct._Object** %_a.addr, align 8
  %v = getelementptr inbounds %struct._Object* %1, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 3
  %2 = load i8** %ovalue, align 8
  %3 = bitcast i8* %2 to %struct._Object*
  store %struct._Object* %3, %struct._Object** %a, align 8
  %4 = load %struct._Object** %_b.addr, align 8
  %v1 = getelementptr inbounds %struct._Object* %4, i32 0, i32 1
  %ovalue2 = getelementptr inbounds %struct._Value* %v1, i32 0, i32 3
  %5 = load i8** %ovalue2, align 8
  %6 = bitcast i8* %5 to %struct._Object*
  store %struct._Object* %6, %struct._Object** %b, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %7 = load %struct._Object** %a, align 8
  %type = getelementptr inbounds %struct._Object* %7, i32 0, i32 0
  %8 = load i32* %type, align 4
  switch i32 %8, label %sw.default51 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb23
  ]

sw.bb:                                            ; preds = %do.body
  %9 = load %struct._Object** %b, align 8
  %type3 = getelementptr inbounds %struct._Object* %9, i32 0, i32 0
  %10 = load i32* %type3, align 4
  switch i32 %10, label %sw.default [
    i32 0, label %sw.bb4
    i32 1, label %sw.bb12
  ]

sw.bb4:                                           ; preds = %sw.bb
  %11 = load %struct._Object** %ret, align 8
  %type5 = getelementptr inbounds %struct._Object* %11, i32 0, i32 0
  store i32 0, i32* %type5, align 4
  %12 = load %struct._Object** %a, align 8
  %v6 = getelementptr inbounds %struct._Object* %12, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v6, i32 0, i32 0
  %13 = load i64* %ivalue, align 8
  %14 = load %struct._Object** %b, align 8
  %v7 = getelementptr inbounds %struct._Object* %14, i32 0, i32 1
  %ivalue8 = getelementptr inbounds %struct._Value* %v7, i32 0, i32 0
  %15 = load i64* %ivalue8, align 8
  %cmp = icmp ne i64 %13, %15
  %conv = zext i1 %cmp to i32
  %conv9 = sext i32 %conv to i64
  %16 = load %struct._Object** %ret, align 8
  %v10 = getelementptr inbounds %struct._Object* %16, i32 0, i32 1
  %ivalue11 = getelementptr inbounds %struct._Value* %v10, i32 0, i32 0
  store i64 %conv9, i64* %ivalue11, align 8
  br label %sw.epilog

sw.bb12:                                          ; preds = %sw.bb
  %17 = load %struct._Object** %ret, align 8
  %type13 = getelementptr inbounds %struct._Object* %17, i32 0, i32 0
  store i32 1, i32* %type13, align 4
  %18 = load %struct._Object** %a, align 8
  %v14 = getelementptr inbounds %struct._Object* %18, i32 0, i32 1
  %ivalue15 = getelementptr inbounds %struct._Value* %v14, i32 0, i32 0
  %19 = load i64* %ivalue15, align 8
  %conv16 = sitofp i64 %19 to double
  %20 = load %struct._Object** %b, align 8
  %v17 = getelementptr inbounds %struct._Object* %20, i32 0, i32 1
  %dvalue = getelementptr inbounds %struct._Value* %v17, i32 0, i32 1
  %21 = load double* %dvalue, align 8
  %cmp18 = fcmp une double %conv16, %21
  %conv19 = zext i1 %cmp18 to i32
  %conv20 = sitofp i32 %conv19 to double
  %22 = load %struct._Object** %ret, align 8
  %v21 = getelementptr inbounds %struct._Object* %22, i32 0, i32 1
  %dvalue22 = getelementptr inbounds %struct._Value* %v21, i32 0, i32 1
  store double %conv20, double* %dvalue22, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %sw.bb
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb12, %sw.bb4
  br label %sw.epilog52

sw.bb23:                                          ; preds = %do.body
  %23 = load %struct._Object** %ret, align 8
  %type24 = getelementptr inbounds %struct._Object* %23, i32 0, i32 0
  store i32 1, i32* %type24, align 4
  %24 = load %struct._Object** %b, align 8
  %type25 = getelementptr inbounds %struct._Object* %24, i32 0, i32 0
  %25 = load i32* %type25, align 4
  switch i32 %25, label %sw.default49 [
    i32 0, label %sw.bb26
    i32 1, label %sw.bb38
  ]

sw.bb26:                                          ; preds = %sw.bb23
  %26 = load %struct._Object** %ret, align 8
  %type27 = getelementptr inbounds %struct._Object* %26, i32 0, i32 0
  store i32 0, i32* %type27, align 4
  %27 = load %struct._Object** %a, align 8
  %v28 = getelementptr inbounds %struct._Object* %27, i32 0, i32 1
  %dvalue29 = getelementptr inbounds %struct._Value* %v28, i32 0, i32 1
  %28 = load double* %dvalue29, align 8
  %29 = load %struct._Object** %b, align 8
  %v30 = getelementptr inbounds %struct._Object* %29, i32 0, i32 1
  %ivalue31 = getelementptr inbounds %struct._Value* %v30, i32 0, i32 0
  %30 = load i64* %ivalue31, align 8
  %conv32 = sitofp i64 %30 to double
  %cmp33 = fcmp une double %28, %conv32
  %conv34 = zext i1 %cmp33 to i32
  %conv35 = sitofp i32 %conv34 to double
  %31 = load %struct._Object** %ret, align 8
  %v36 = getelementptr inbounds %struct._Object* %31, i32 0, i32 1
  %dvalue37 = getelementptr inbounds %struct._Value* %v36, i32 0, i32 1
  store double %conv35, double* %dvalue37, align 8
  br label %sw.epilog50

sw.bb38:                                          ; preds = %sw.bb23
  %32 = load %struct._Object** %ret, align 8
  %type39 = getelementptr inbounds %struct._Object* %32, i32 0, i32 0
  store i32 1, i32* %type39, align 4
  %33 = load %struct._Object** %a, align 8
  %v40 = getelementptr inbounds %struct._Object* %33, i32 0, i32 1
  %dvalue41 = getelementptr inbounds %struct._Value* %v40, i32 0, i32 1
  %34 = load double* %dvalue41, align 8
  %35 = load %struct._Object** %b, align 8
  %v42 = getelementptr inbounds %struct._Object* %35, i32 0, i32 1
  %dvalue43 = getelementptr inbounds %struct._Value* %v42, i32 0, i32 1
  %36 = load double* %dvalue43, align 8
  %cmp44 = fcmp une double %34, %36
  %conv45 = zext i1 %cmp44 to i32
  %conv46 = sitofp i32 %conv45 to double
  %37 = load %struct._Object** %ret, align 8
  %v47 = getelementptr inbounds %struct._Object* %37, i32 0, i32 1
  %dvalue48 = getelementptr inbounds %struct._Value* %v47, i32 0, i32 1
  store double %conv46, double* %dvalue48, align 8
  br label %sw.epilog50

sw.default49:                                     ; preds = %sw.bb23
  br label %sw.epilog50

sw.epilog50:                                      ; preds = %sw.default49, %sw.bb38, %sw.bb26
  br label %sw.epilog52

sw.default51:                                     ; preds = %do.body
  br label %sw.epilog52

sw.epilog52:                                      ; preds = %sw.default51, %sw.epilog50, %sw.epilog
  br label %do.end

do.end:                                           ; preds = %sw.epilog52
  %38 = load %struct._Object** %ret, align 8
  ret %struct._Object* %38
}

define %struct._Object* @Object_gtObject(%struct._Object* %_a, %struct._Object* %_b) nounwind uwtable ssp {
entry:
  %_a.addr = alloca %struct._Object*, align 8
  %_b.addr = alloca %struct._Object*, align 8
  %ret = alloca %struct._Object*, align 8
  %a = alloca %struct._Object*, align 8
  %b = alloca %struct._Object*, align 8
  store %struct._Object* %_a, %struct._Object** %_a.addr, align 8
  store %struct._Object* %_b, %struct._Object** %_b.addr, align 8
  %call = call i8* @malloc(i64 40)
  %0 = bitcast i8* %call to %struct._Object*
  store %struct._Object* %0, %struct._Object** %ret, align 8
  %1 = load %struct._Object** %_a.addr, align 8
  %v = getelementptr inbounds %struct._Object* %1, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 3
  %2 = load i8** %ovalue, align 8
  %3 = bitcast i8* %2 to %struct._Object*
  store %struct._Object* %3, %struct._Object** %a, align 8
  %4 = load %struct._Object** %_b.addr, align 8
  %v1 = getelementptr inbounds %struct._Object* %4, i32 0, i32 1
  %ovalue2 = getelementptr inbounds %struct._Value* %v1, i32 0, i32 3
  %5 = load i8** %ovalue2, align 8
  %6 = bitcast i8* %5 to %struct._Object*
  store %struct._Object* %6, %struct._Object** %b, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %7 = load %struct._Object** %a, align 8
  %type = getelementptr inbounds %struct._Object* %7, i32 0, i32 0
  %8 = load i32* %type, align 4
  switch i32 %8, label %sw.default51 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb23
  ]

sw.bb:                                            ; preds = %do.body
  %9 = load %struct._Object** %b, align 8
  %type3 = getelementptr inbounds %struct._Object* %9, i32 0, i32 0
  %10 = load i32* %type3, align 4
  switch i32 %10, label %sw.default [
    i32 0, label %sw.bb4
    i32 1, label %sw.bb12
  ]

sw.bb4:                                           ; preds = %sw.bb
  %11 = load %struct._Object** %ret, align 8
  %type5 = getelementptr inbounds %struct._Object* %11, i32 0, i32 0
  store i32 0, i32* %type5, align 4
  %12 = load %struct._Object** %a, align 8
  %v6 = getelementptr inbounds %struct._Object* %12, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v6, i32 0, i32 0
  %13 = load i64* %ivalue, align 8
  %14 = load %struct._Object** %b, align 8
  %v7 = getelementptr inbounds %struct._Object* %14, i32 0, i32 1
  %ivalue8 = getelementptr inbounds %struct._Value* %v7, i32 0, i32 0
  %15 = load i64* %ivalue8, align 8
  %cmp = icmp sgt i64 %13, %15
  %conv = zext i1 %cmp to i32
  %conv9 = sext i32 %conv to i64
  %16 = load %struct._Object** %ret, align 8
  %v10 = getelementptr inbounds %struct._Object* %16, i32 0, i32 1
  %ivalue11 = getelementptr inbounds %struct._Value* %v10, i32 0, i32 0
  store i64 %conv9, i64* %ivalue11, align 8
  br label %sw.epilog

sw.bb12:                                          ; preds = %sw.bb
  %17 = load %struct._Object** %ret, align 8
  %type13 = getelementptr inbounds %struct._Object* %17, i32 0, i32 0
  store i32 1, i32* %type13, align 4
  %18 = load %struct._Object** %a, align 8
  %v14 = getelementptr inbounds %struct._Object* %18, i32 0, i32 1
  %ivalue15 = getelementptr inbounds %struct._Value* %v14, i32 0, i32 0
  %19 = load i64* %ivalue15, align 8
  %conv16 = sitofp i64 %19 to double
  %20 = load %struct._Object** %b, align 8
  %v17 = getelementptr inbounds %struct._Object* %20, i32 0, i32 1
  %dvalue = getelementptr inbounds %struct._Value* %v17, i32 0, i32 1
  %21 = load double* %dvalue, align 8
  %cmp18 = fcmp ogt double %conv16, %21
  %conv19 = zext i1 %cmp18 to i32
  %conv20 = sitofp i32 %conv19 to double
  %22 = load %struct._Object** %ret, align 8
  %v21 = getelementptr inbounds %struct._Object* %22, i32 0, i32 1
  %dvalue22 = getelementptr inbounds %struct._Value* %v21, i32 0, i32 1
  store double %conv20, double* %dvalue22, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %sw.bb
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb12, %sw.bb4
  br label %sw.epilog52

sw.bb23:                                          ; preds = %do.body
  %23 = load %struct._Object** %ret, align 8
  %type24 = getelementptr inbounds %struct._Object* %23, i32 0, i32 0
  store i32 1, i32* %type24, align 4
  %24 = load %struct._Object** %b, align 8
  %type25 = getelementptr inbounds %struct._Object* %24, i32 0, i32 0
  %25 = load i32* %type25, align 4
  switch i32 %25, label %sw.default49 [
    i32 0, label %sw.bb26
    i32 1, label %sw.bb38
  ]

sw.bb26:                                          ; preds = %sw.bb23
  %26 = load %struct._Object** %ret, align 8
  %type27 = getelementptr inbounds %struct._Object* %26, i32 0, i32 0
  store i32 0, i32* %type27, align 4
  %27 = load %struct._Object** %a, align 8
  %v28 = getelementptr inbounds %struct._Object* %27, i32 0, i32 1
  %dvalue29 = getelementptr inbounds %struct._Value* %v28, i32 0, i32 1
  %28 = load double* %dvalue29, align 8
  %29 = load %struct._Object** %b, align 8
  %v30 = getelementptr inbounds %struct._Object* %29, i32 0, i32 1
  %ivalue31 = getelementptr inbounds %struct._Value* %v30, i32 0, i32 0
  %30 = load i64* %ivalue31, align 8
  %conv32 = sitofp i64 %30 to double
  %cmp33 = fcmp ogt double %28, %conv32
  %conv34 = zext i1 %cmp33 to i32
  %conv35 = sitofp i32 %conv34 to double
  %31 = load %struct._Object** %ret, align 8
  %v36 = getelementptr inbounds %struct._Object* %31, i32 0, i32 1
  %dvalue37 = getelementptr inbounds %struct._Value* %v36, i32 0, i32 1
  store double %conv35, double* %dvalue37, align 8
  br label %sw.epilog50

sw.bb38:                                          ; preds = %sw.bb23
  %32 = load %struct._Object** %ret, align 8
  %type39 = getelementptr inbounds %struct._Object* %32, i32 0, i32 0
  store i32 1, i32* %type39, align 4
  %33 = load %struct._Object** %a, align 8
  %v40 = getelementptr inbounds %struct._Object* %33, i32 0, i32 1
  %dvalue41 = getelementptr inbounds %struct._Value* %v40, i32 0, i32 1
  %34 = load double* %dvalue41, align 8
  %35 = load %struct._Object** %b, align 8
  %v42 = getelementptr inbounds %struct._Object* %35, i32 0, i32 1
  %dvalue43 = getelementptr inbounds %struct._Value* %v42, i32 0, i32 1
  %36 = load double* %dvalue43, align 8
  %cmp44 = fcmp ogt double %34, %36
  %conv45 = zext i1 %cmp44 to i32
  %conv46 = sitofp i32 %conv45 to double
  %37 = load %struct._Object** %ret, align 8
  %v47 = getelementptr inbounds %struct._Object* %37, i32 0, i32 1
  %dvalue48 = getelementptr inbounds %struct._Value* %v47, i32 0, i32 1
  store double %conv46, double* %dvalue48, align 8
  br label %sw.epilog50

sw.default49:                                     ; preds = %sw.bb23
  br label %sw.epilog50

sw.epilog50:                                      ; preds = %sw.default49, %sw.bb38, %sw.bb26
  br label %sw.epilog52

sw.default51:                                     ; preds = %do.body
  br label %sw.epilog52

sw.epilog52:                                      ; preds = %sw.default51, %sw.epilog50, %sw.epilog
  br label %do.end

do.end:                                           ; preds = %sw.epilog52
  %38 = load %struct._Object** %ret, align 8
  ret %struct._Object* %38
}

define %struct._Object* @Object_ltObject(%struct._Object* %_a, %struct._Object* %_b) nounwind uwtable ssp {
entry:
  %_a.addr = alloca %struct._Object*, align 8
  %_b.addr = alloca %struct._Object*, align 8
  %ret = alloca %struct._Object*, align 8
  %a = alloca %struct._Object*, align 8
  %b = alloca %struct._Object*, align 8
  store %struct._Object* %_a, %struct._Object** %_a.addr, align 8
  store %struct._Object* %_b, %struct._Object** %_b.addr, align 8
  %call = call i8* @malloc(i64 40)
  %0 = bitcast i8* %call to %struct._Object*
  store %struct._Object* %0, %struct._Object** %ret, align 8
  %1 = load %struct._Object** %_a.addr, align 8
  %v = getelementptr inbounds %struct._Object* %1, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 3
  %2 = load i8** %ovalue, align 8
  %3 = bitcast i8* %2 to %struct._Object*
  store %struct._Object* %3, %struct._Object** %a, align 8
  %4 = load %struct._Object** %_b.addr, align 8
  %v1 = getelementptr inbounds %struct._Object* %4, i32 0, i32 1
  %ovalue2 = getelementptr inbounds %struct._Value* %v1, i32 0, i32 3
  %5 = load i8** %ovalue2, align 8
  %6 = bitcast i8* %5 to %struct._Object*
  store %struct._Object* %6, %struct._Object** %b, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %7 = load %struct._Object** %a, align 8
  %type = getelementptr inbounds %struct._Object* %7, i32 0, i32 0
  %8 = load i32* %type, align 4
  switch i32 %8, label %sw.default51 [
    i32 0, label %sw.bb
    i32 1, label %sw.bb23
  ]

sw.bb:                                            ; preds = %do.body
  %9 = load %struct._Object** %b, align 8
  %type3 = getelementptr inbounds %struct._Object* %9, i32 0, i32 0
  %10 = load i32* %type3, align 4
  switch i32 %10, label %sw.default [
    i32 0, label %sw.bb4
    i32 1, label %sw.bb12
  ]

sw.bb4:                                           ; preds = %sw.bb
  %11 = load %struct._Object** %ret, align 8
  %type5 = getelementptr inbounds %struct._Object* %11, i32 0, i32 0
  store i32 0, i32* %type5, align 4
  %12 = load %struct._Object** %a, align 8
  %v6 = getelementptr inbounds %struct._Object* %12, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v6, i32 0, i32 0
  %13 = load i64* %ivalue, align 8
  %14 = load %struct._Object** %b, align 8
  %v7 = getelementptr inbounds %struct._Object* %14, i32 0, i32 1
  %ivalue8 = getelementptr inbounds %struct._Value* %v7, i32 0, i32 0
  %15 = load i64* %ivalue8, align 8
  %cmp = icmp slt i64 %13, %15
  %conv = zext i1 %cmp to i32
  %conv9 = sext i32 %conv to i64
  %16 = load %struct._Object** %ret, align 8
  %v10 = getelementptr inbounds %struct._Object* %16, i32 0, i32 1
  %ivalue11 = getelementptr inbounds %struct._Value* %v10, i32 0, i32 0
  store i64 %conv9, i64* %ivalue11, align 8
  br label %sw.epilog

sw.bb12:                                          ; preds = %sw.bb
  %17 = load %struct._Object** %ret, align 8
  %type13 = getelementptr inbounds %struct._Object* %17, i32 0, i32 0
  store i32 1, i32* %type13, align 4
  %18 = load %struct._Object** %a, align 8
  %v14 = getelementptr inbounds %struct._Object* %18, i32 0, i32 1
  %ivalue15 = getelementptr inbounds %struct._Value* %v14, i32 0, i32 0
  %19 = load i64* %ivalue15, align 8
  %conv16 = sitofp i64 %19 to double
  %20 = load %struct._Object** %b, align 8
  %v17 = getelementptr inbounds %struct._Object* %20, i32 0, i32 1
  %dvalue = getelementptr inbounds %struct._Value* %v17, i32 0, i32 1
  %21 = load double* %dvalue, align 8
  %cmp18 = fcmp olt double %conv16, %21
  %conv19 = zext i1 %cmp18 to i32
  %conv20 = sitofp i32 %conv19 to double
  %22 = load %struct._Object** %ret, align 8
  %v21 = getelementptr inbounds %struct._Object* %22, i32 0, i32 1
  %dvalue22 = getelementptr inbounds %struct._Value* %v21, i32 0, i32 1
  store double %conv20, double* %dvalue22, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %sw.bb
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb12, %sw.bb4
  br label %sw.epilog52

sw.bb23:                                          ; preds = %do.body
  %23 = load %struct._Object** %ret, align 8
  %type24 = getelementptr inbounds %struct._Object* %23, i32 0, i32 0
  store i32 1, i32* %type24, align 4
  %24 = load %struct._Object** %b, align 8
  %type25 = getelementptr inbounds %struct._Object* %24, i32 0, i32 0
  %25 = load i32* %type25, align 4
  switch i32 %25, label %sw.default49 [
    i32 0, label %sw.bb26
    i32 1, label %sw.bb38
  ]

sw.bb26:                                          ; preds = %sw.bb23
  %26 = load %struct._Object** %ret, align 8
  %type27 = getelementptr inbounds %struct._Object* %26, i32 0, i32 0
  store i32 0, i32* %type27, align 4
  %27 = load %struct._Object** %a, align 8
  %v28 = getelementptr inbounds %struct._Object* %27, i32 0, i32 1
  %dvalue29 = getelementptr inbounds %struct._Value* %v28, i32 0, i32 1
  %28 = load double* %dvalue29, align 8
  %29 = load %struct._Object** %b, align 8
  %v30 = getelementptr inbounds %struct._Object* %29, i32 0, i32 1
  %ivalue31 = getelementptr inbounds %struct._Value* %v30, i32 0, i32 0
  %30 = load i64* %ivalue31, align 8
  %conv32 = sitofp i64 %30 to double
  %cmp33 = fcmp olt double %28, %conv32
  %conv34 = zext i1 %cmp33 to i32
  %conv35 = sitofp i32 %conv34 to double
  %31 = load %struct._Object** %ret, align 8
  %v36 = getelementptr inbounds %struct._Object* %31, i32 0, i32 1
  %dvalue37 = getelementptr inbounds %struct._Value* %v36, i32 0, i32 1
  store double %conv35, double* %dvalue37, align 8
  br label %sw.epilog50

sw.bb38:                                          ; preds = %sw.bb23
  %32 = load %struct._Object** %ret, align 8
  %type39 = getelementptr inbounds %struct._Object* %32, i32 0, i32 0
  store i32 1, i32* %type39, align 4
  %33 = load %struct._Object** %a, align 8
  %v40 = getelementptr inbounds %struct._Object* %33, i32 0, i32 1
  %dvalue41 = getelementptr inbounds %struct._Value* %v40, i32 0, i32 1
  %34 = load double* %dvalue41, align 8
  %35 = load %struct._Object** %b, align 8
  %v42 = getelementptr inbounds %struct._Object* %35, i32 0, i32 1
  %dvalue43 = getelementptr inbounds %struct._Value* %v42, i32 0, i32 1
  %36 = load double* %dvalue43, align 8
  %cmp44 = fcmp olt double %34, %36
  %conv45 = zext i1 %cmp44 to i32
  %conv46 = sitofp i32 %conv45 to double
  %37 = load %struct._Object** %ret, align 8
  %v47 = getelementptr inbounds %struct._Object* %37, i32 0, i32 1
  %dvalue48 = getelementptr inbounds %struct._Value* %v47, i32 0, i32 1
  store double %conv46, double* %dvalue48, align 8
  br label %sw.epilog50

sw.default49:                                     ; preds = %sw.bb23
  br label %sw.epilog50

sw.epilog50:                                      ; preds = %sw.default49, %sw.bb38, %sw.bb26
  br label %sw.epilog52

sw.default51:                                     ; preds = %do.body
  br label %sw.epilog52

sw.epilog52:                                      ; preds = %sw.default51, %sw.epilog50, %sw.epilog
  br label %do.end

do.end:                                           ; preds = %sw.epilog52
  %38 = load %struct._Object** %ret, align 8
  ret %struct._Object* %38
}

define %struct._Object* @Object_addInt(%struct._Object* %_a, i32 %b) nounwind uwtable ssp {
entry:
  %_a.addr = alloca %struct._Object*, align 8
  %b.addr = alloca i32, align 4
  %ret = alloca %struct._Object*, align 8
  %a = alloca %struct._Object*, align 8
  store %struct._Object* %_a, %struct._Object** %_a.addr, align 8
  store i32 %b, i32* %b.addr, align 4
  %call = call i8* @malloc(i64 40)
  %0 = bitcast i8* %call to %struct._Object*
  store %struct._Object* %0, %struct._Object** %ret, align 8
  %1 = load %struct._Object** %_a.addr, align 8
  %v = getelementptr inbounds %struct._Object* %1, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 3
  %2 = load i8** %ovalue, align 8
  %3 = bitcast i8* %2 to %struct._Object*
  store %struct._Object* %3, %struct._Object** %a, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %4 = load %struct._Object** %a, align 8
  %type = getelementptr inbounds %struct._Object* %4, i32 0, i32 0
  %5 = load i32* %type, align 4
  switch i32 %5, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb5
  ]

sw.bb:                                            ; preds = %do.body
  %6 = load %struct._Object** %ret, align 8
  %type1 = getelementptr inbounds %struct._Object* %6, i32 0, i32 0
  store i32 0, i32* %type1, align 4
  %7 = load %struct._Object** %a, align 8
  %v2 = getelementptr inbounds %struct._Object* %7, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v2, i32 0, i32 0
  %8 = load i64* %ivalue, align 8
  %9 = load i32* %b.addr, align 4
  %conv = sext i32 %9 to i64
  %add = add nsw i64 %8, %conv
  %10 = load %struct._Object** %ret, align 8
  %v3 = getelementptr inbounds %struct._Object* %10, i32 0, i32 1
  %ivalue4 = getelementptr inbounds %struct._Value* %v3, i32 0, i32 0
  store i64 %add, i64* %ivalue4, align 8
  br label %sw.epilog

sw.bb5:                                           ; preds = %do.body
  %11 = load %struct._Object** %ret, align 8
  %type6 = getelementptr inbounds %struct._Object* %11, i32 0, i32 0
  store i32 1, i32* %type6, align 4
  %12 = load %struct._Object** %a, align 8
  %v7 = getelementptr inbounds %struct._Object* %12, i32 0, i32 1
  %dvalue = getelementptr inbounds %struct._Value* %v7, i32 0, i32 1
  %13 = load double* %dvalue, align 8
  %14 = load i32* %b.addr, align 4
  %conv8 = sitofp i32 %14 to double
  %add9 = fadd double %13, %conv8
  %15 = load %struct._Object** %ret, align 8
  %v10 = getelementptr inbounds %struct._Object* %15, i32 0, i32 1
  %dvalue11 = getelementptr inbounds %struct._Value* %v10, i32 0, i32 1
  store double %add9, double* %dvalue11, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %do.body
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb5, %sw.bb
  br label %do.end

do.end:                                           ; preds = %sw.epilog
  %16 = load %struct._Object** %ret, align 8
  ret %struct._Object* %16
}

define %struct._Object* @Object_subInt(%struct._Object* %_a, i32 %b) nounwind uwtable ssp {
entry:
  %_a.addr = alloca %struct._Object*, align 8
  %b.addr = alloca i32, align 4
  %ret = alloca %struct._Object*, align 8
  %a = alloca %struct._Object*, align 8
  store %struct._Object* %_a, %struct._Object** %_a.addr, align 8
  store i32 %b, i32* %b.addr, align 4
  %call = call i8* @malloc(i64 40)
  %0 = bitcast i8* %call to %struct._Object*
  store %struct._Object* %0, %struct._Object** %ret, align 8
  %1 = load %struct._Object** %_a.addr, align 8
  %type = getelementptr inbounds %struct._Object* %1, i32 0, i32 0
  %2 = load i32* %type, align 4
  %cmp = icmp eq i32 %2, 6
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load %struct._Object** %_a.addr, align 8
  %v = getelementptr inbounds %struct._Object* %3, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 3
  %4 = load i8** %ovalue, align 8
  %5 = bitcast i8* %4 to %struct._Object*
  br label %cond.end

cond.false:                                       ; preds = %entry
  %6 = load %struct._Object** %_a.addr, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._Object* [ %5, %cond.true ], [ %6, %cond.false ]
  store %struct._Object* %cond, %struct._Object** %a, align 8
  br label %do.body

do.body:                                          ; preds = %cond.end
  %7 = load %struct._Object** %a, align 8
  %type1 = getelementptr inbounds %struct._Object* %7, i32 0, i32 0
  %8 = load i32* %type1, align 4
  switch i32 %8, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb6
  ]

sw.bb:                                            ; preds = %do.body
  %9 = load %struct._Object** %ret, align 8
  %type2 = getelementptr inbounds %struct._Object* %9, i32 0, i32 0
  store i32 0, i32* %type2, align 4
  %10 = load %struct._Object** %a, align 8
  %v3 = getelementptr inbounds %struct._Object* %10, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v3, i32 0, i32 0
  %11 = load i64* %ivalue, align 8
  %12 = load i32* %b.addr, align 4
  %conv = sext i32 %12 to i64
  %sub = sub nsw i64 %11, %conv
  %13 = load %struct._Object** %ret, align 8
  %v4 = getelementptr inbounds %struct._Object* %13, i32 0, i32 1
  %ivalue5 = getelementptr inbounds %struct._Value* %v4, i32 0, i32 0
  store i64 %sub, i64* %ivalue5, align 8
  br label %sw.epilog

sw.bb6:                                           ; preds = %do.body
  %14 = load %struct._Object** %ret, align 8
  %type7 = getelementptr inbounds %struct._Object* %14, i32 0, i32 0
  store i32 1, i32* %type7, align 4
  %15 = load %struct._Object** %a, align 8
  %v8 = getelementptr inbounds %struct._Object* %15, i32 0, i32 1
  %dvalue = getelementptr inbounds %struct._Value* %v8, i32 0, i32 1
  %16 = load double* %dvalue, align 8
  %17 = load i32* %b.addr, align 4
  %conv9 = sitofp i32 %17 to double
  %sub10 = fsub double %16, %conv9
  %18 = load %struct._Object** %ret, align 8
  %v11 = getelementptr inbounds %struct._Object* %18, i32 0, i32 1
  %dvalue12 = getelementptr inbounds %struct._Value* %v11, i32 0, i32 1
  store double %sub10, double* %dvalue12, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %do.body
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb6, %sw.bb
  br label %do.end

do.end:                                           ; preds = %sw.epilog
  %19 = load %struct._Object** %ret, align 8
  ret %struct._Object* %19
}

define %struct._Object* @Object_mulInt(%struct._Object* %_a, i32 %b) nounwind uwtable ssp {
entry:
  %_a.addr = alloca %struct._Object*, align 8
  %b.addr = alloca i32, align 4
  %ret = alloca %struct._Object*, align 8
  %a = alloca %struct._Object*, align 8
  store %struct._Object* %_a, %struct._Object** %_a.addr, align 8
  store i32 %b, i32* %b.addr, align 4
  %call = call i8* @malloc(i64 40)
  %0 = bitcast i8* %call to %struct._Object*
  store %struct._Object* %0, %struct._Object** %ret, align 8
  %1 = load %struct._Object** %_a.addr, align 8
  %v = getelementptr inbounds %struct._Object* %1, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 3
  %2 = load i8** %ovalue, align 8
  %3 = bitcast i8* %2 to %struct._Object*
  store %struct._Object* %3, %struct._Object** %a, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %4 = load %struct._Object** %a, align 8
  %type = getelementptr inbounds %struct._Object* %4, i32 0, i32 0
  %5 = load i32* %type, align 4
  switch i32 %5, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb5
  ]

sw.bb:                                            ; preds = %do.body
  %6 = load %struct._Object** %ret, align 8
  %type1 = getelementptr inbounds %struct._Object* %6, i32 0, i32 0
  store i32 0, i32* %type1, align 4
  %7 = load %struct._Object** %a, align 8
  %v2 = getelementptr inbounds %struct._Object* %7, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v2, i32 0, i32 0
  %8 = load i64* %ivalue, align 8
  %9 = load i32* %b.addr, align 4
  %conv = sext i32 %9 to i64
  %mul = mul nsw i64 %8, %conv
  %10 = load %struct._Object** %ret, align 8
  %v3 = getelementptr inbounds %struct._Object* %10, i32 0, i32 1
  %ivalue4 = getelementptr inbounds %struct._Value* %v3, i32 0, i32 0
  store i64 %mul, i64* %ivalue4, align 8
  br label %sw.epilog

sw.bb5:                                           ; preds = %do.body
  %11 = load %struct._Object** %ret, align 8
  %type6 = getelementptr inbounds %struct._Object* %11, i32 0, i32 0
  store i32 1, i32* %type6, align 4
  %12 = load %struct._Object** %a, align 8
  %v7 = getelementptr inbounds %struct._Object* %12, i32 0, i32 1
  %dvalue = getelementptr inbounds %struct._Value* %v7, i32 0, i32 1
  %13 = load double* %dvalue, align 8
  %14 = load i32* %b.addr, align 4
  %conv8 = sitofp i32 %14 to double
  %mul9 = fmul double %13, %conv8
  %15 = load %struct._Object** %ret, align 8
  %v10 = getelementptr inbounds %struct._Object* %15, i32 0, i32 1
  %dvalue11 = getelementptr inbounds %struct._Value* %v10, i32 0, i32 1
  store double %mul9, double* %dvalue11, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %do.body
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb5, %sw.bb
  br label %do.end

do.end:                                           ; preds = %sw.epilog
  %16 = load %struct._Object** %ret, align 8
  ret %struct._Object* %16
}

define %struct._Object* @Object_divInt(%struct._Object* %_a, i32 %b) nounwind uwtable ssp {
entry:
  %_a.addr = alloca %struct._Object*, align 8
  %b.addr = alloca i32, align 4
  %ret = alloca %struct._Object*, align 8
  %a = alloca %struct._Object*, align 8
  store %struct._Object* %_a, %struct._Object** %_a.addr, align 8
  store i32 %b, i32* %b.addr, align 4
  %call = call i8* @malloc(i64 40)
  %0 = bitcast i8* %call to %struct._Object*
  store %struct._Object* %0, %struct._Object** %ret, align 8
  %1 = load %struct._Object** %_a.addr, align 8
  %v = getelementptr inbounds %struct._Object* %1, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 3
  %2 = load i8** %ovalue, align 8
  %3 = bitcast i8* %2 to %struct._Object*
  store %struct._Object* %3, %struct._Object** %a, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %4 = load %struct._Object** %a, align 8
  %type = getelementptr inbounds %struct._Object* %4, i32 0, i32 0
  %5 = load i32* %type, align 4
  switch i32 %5, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb5
  ]

sw.bb:                                            ; preds = %do.body
  %6 = load %struct._Object** %ret, align 8
  %type1 = getelementptr inbounds %struct._Object* %6, i32 0, i32 0
  store i32 0, i32* %type1, align 4
  %7 = load %struct._Object** %a, align 8
  %v2 = getelementptr inbounds %struct._Object* %7, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v2, i32 0, i32 0
  %8 = load i64* %ivalue, align 8
  %9 = load i32* %b.addr, align 4
  %conv = sext i32 %9 to i64
  %div = sdiv i64 %8, %conv
  %10 = load %struct._Object** %ret, align 8
  %v3 = getelementptr inbounds %struct._Object* %10, i32 0, i32 1
  %ivalue4 = getelementptr inbounds %struct._Value* %v3, i32 0, i32 0
  store i64 %div, i64* %ivalue4, align 8
  br label %sw.epilog

sw.bb5:                                           ; preds = %do.body
  %11 = load %struct._Object** %ret, align 8
  %type6 = getelementptr inbounds %struct._Object* %11, i32 0, i32 0
  store i32 1, i32* %type6, align 4
  %12 = load %struct._Object** %a, align 8
  %v7 = getelementptr inbounds %struct._Object* %12, i32 0, i32 1
  %dvalue = getelementptr inbounds %struct._Value* %v7, i32 0, i32 1
  %13 = load double* %dvalue, align 8
  %14 = load i32* %b.addr, align 4
  %conv8 = sitofp i32 %14 to double
  %div9 = fdiv double %13, %conv8
  %15 = load %struct._Object** %ret, align 8
  %v10 = getelementptr inbounds %struct._Object* %15, i32 0, i32 1
  %dvalue11 = getelementptr inbounds %struct._Value* %v10, i32 0, i32 1
  store double %div9, double* %dvalue11, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %do.body
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb5, %sw.bb
  br label %do.end

do.end:                                           ; preds = %sw.epilog
  %16 = load %struct._Object** %ret, align 8
  ret %struct._Object* %16
}

define %struct._Object* @Object_eqInt(%struct._Object* %_a, i32 %b) nounwind uwtable ssp {
entry:
  %_a.addr = alloca %struct._Object*, align 8
  %b.addr = alloca i32, align 4
  %ret = alloca %struct._Object*, align 8
  %a = alloca %struct._Object*, align 8
  store %struct._Object* %_a, %struct._Object** %_a.addr, align 8
  store i32 %b, i32* %b.addr, align 4
  %call = call i8* @malloc(i64 40)
  %0 = bitcast i8* %call to %struct._Object*
  store %struct._Object* %0, %struct._Object** %ret, align 8
  %1 = load %struct._Object** %_a.addr, align 8
  %v = getelementptr inbounds %struct._Object* %1, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 3
  %2 = load i8** %ovalue, align 8
  %3 = bitcast i8* %2 to %struct._Object*
  store %struct._Object* %3, %struct._Object** %a, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %4 = load %struct._Object** %a, align 8
  %type = getelementptr inbounds %struct._Object* %4, i32 0, i32 0
  %5 = load i32* %type, align 4
  switch i32 %5, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb7
  ]

sw.bb:                                            ; preds = %do.body
  %6 = load %struct._Object** %ret, align 8
  %type1 = getelementptr inbounds %struct._Object* %6, i32 0, i32 0
  store i32 0, i32* %type1, align 4
  %7 = load %struct._Object** %a, align 8
  %v2 = getelementptr inbounds %struct._Object* %7, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v2, i32 0, i32 0
  %8 = load i64* %ivalue, align 8
  %9 = load i32* %b.addr, align 4
  %conv = sext i32 %9 to i64
  %cmp = icmp eq i64 %8, %conv
  %conv3 = zext i1 %cmp to i32
  %conv4 = sext i32 %conv3 to i64
  %10 = load %struct._Object** %ret, align 8
  %v5 = getelementptr inbounds %struct._Object* %10, i32 0, i32 1
  %ivalue6 = getelementptr inbounds %struct._Value* %v5, i32 0, i32 0
  store i64 %conv4, i64* %ivalue6, align 8
  br label %sw.epilog

sw.bb7:                                           ; preds = %do.body
  %11 = load %struct._Object** %ret, align 8
  %type8 = getelementptr inbounds %struct._Object* %11, i32 0, i32 0
  store i32 1, i32* %type8, align 4
  %12 = load %struct._Object** %a, align 8
  %v9 = getelementptr inbounds %struct._Object* %12, i32 0, i32 1
  %dvalue = getelementptr inbounds %struct._Value* %v9, i32 0, i32 1
  %13 = load double* %dvalue, align 8
  %14 = load i32* %b.addr, align 4
  %conv10 = sitofp i32 %14 to double
  %cmp11 = fcmp oeq double %13, %conv10
  %conv12 = zext i1 %cmp11 to i32
  %conv13 = sitofp i32 %conv12 to double
  %15 = load %struct._Object** %ret, align 8
  %v14 = getelementptr inbounds %struct._Object* %15, i32 0, i32 1
  %dvalue15 = getelementptr inbounds %struct._Value* %v14, i32 0, i32 1
  store double %conv13, double* %dvalue15, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %do.body
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb7, %sw.bb
  br label %do.end

do.end:                                           ; preds = %sw.epilog
  %16 = load %struct._Object** %ret, align 8
  ret %struct._Object* %16
}

define %struct._Object* @Object_neInt(%struct._Object* %_a, i32 %b) nounwind uwtable ssp {
entry:
  %_a.addr = alloca %struct._Object*, align 8
  %b.addr = alloca i32, align 4
  %ret = alloca %struct._Object*, align 8
  %a = alloca %struct._Object*, align 8
  store %struct._Object* %_a, %struct._Object** %_a.addr, align 8
  store i32 %b, i32* %b.addr, align 4
  %call = call i8* @malloc(i64 40)
  %0 = bitcast i8* %call to %struct._Object*
  store %struct._Object* %0, %struct._Object** %ret, align 8
  %1 = load %struct._Object** %_a.addr, align 8
  %v = getelementptr inbounds %struct._Object* %1, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 3
  %2 = load i8** %ovalue, align 8
  %3 = bitcast i8* %2 to %struct._Object*
  store %struct._Object* %3, %struct._Object** %a, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %4 = load %struct._Object** %a, align 8
  %type = getelementptr inbounds %struct._Object* %4, i32 0, i32 0
  %5 = load i32* %type, align 4
  switch i32 %5, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb7
  ]

sw.bb:                                            ; preds = %do.body
  %6 = load %struct._Object** %ret, align 8
  %type1 = getelementptr inbounds %struct._Object* %6, i32 0, i32 0
  store i32 0, i32* %type1, align 4
  %7 = load %struct._Object** %a, align 8
  %v2 = getelementptr inbounds %struct._Object* %7, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v2, i32 0, i32 0
  %8 = load i64* %ivalue, align 8
  %9 = load i32* %b.addr, align 4
  %conv = sext i32 %9 to i64
  %cmp = icmp ne i64 %8, %conv
  %conv3 = zext i1 %cmp to i32
  %conv4 = sext i32 %conv3 to i64
  %10 = load %struct._Object** %ret, align 8
  %v5 = getelementptr inbounds %struct._Object* %10, i32 0, i32 1
  %ivalue6 = getelementptr inbounds %struct._Value* %v5, i32 0, i32 0
  store i64 %conv4, i64* %ivalue6, align 8
  br label %sw.epilog

sw.bb7:                                           ; preds = %do.body
  %11 = load %struct._Object** %ret, align 8
  %type8 = getelementptr inbounds %struct._Object* %11, i32 0, i32 0
  store i32 1, i32* %type8, align 4
  %12 = load %struct._Object** %a, align 8
  %v9 = getelementptr inbounds %struct._Object* %12, i32 0, i32 1
  %dvalue = getelementptr inbounds %struct._Value* %v9, i32 0, i32 1
  %13 = load double* %dvalue, align 8
  %14 = load i32* %b.addr, align 4
  %conv10 = sitofp i32 %14 to double
  %cmp11 = fcmp une double %13, %conv10
  %conv12 = zext i1 %cmp11 to i32
  %conv13 = sitofp i32 %conv12 to double
  %15 = load %struct._Object** %ret, align 8
  %v14 = getelementptr inbounds %struct._Object* %15, i32 0, i32 1
  %dvalue15 = getelementptr inbounds %struct._Value* %v14, i32 0, i32 1
  store double %conv13, double* %dvalue15, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %do.body
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb7, %sw.bb
  br label %do.end

do.end:                                           ; preds = %sw.epilog
  %16 = load %struct._Object** %ret, align 8
  ret %struct._Object* %16
}

define %struct._Object* @Object_gtInt(%struct._Object* %_a, i32 %b) nounwind uwtable ssp {
entry:
  %_a.addr = alloca %struct._Object*, align 8
  %b.addr = alloca i32, align 4
  %ret = alloca %struct._Object*, align 8
  %a = alloca %struct._Object*, align 8
  store %struct._Object* %_a, %struct._Object** %_a.addr, align 8
  store i32 %b, i32* %b.addr, align 4
  %call = call i8* @malloc(i64 40)
  %0 = bitcast i8* %call to %struct._Object*
  store %struct._Object* %0, %struct._Object** %ret, align 8
  %1 = load %struct._Object** %_a.addr, align 8
  %v = getelementptr inbounds %struct._Object* %1, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 3
  %2 = load i8** %ovalue, align 8
  %3 = bitcast i8* %2 to %struct._Object*
  store %struct._Object* %3, %struct._Object** %a, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %4 = load %struct._Object** %a, align 8
  %type = getelementptr inbounds %struct._Object* %4, i32 0, i32 0
  %5 = load i32* %type, align 4
  switch i32 %5, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb7
  ]

sw.bb:                                            ; preds = %do.body
  %6 = load %struct._Object** %ret, align 8
  %type1 = getelementptr inbounds %struct._Object* %6, i32 0, i32 0
  store i32 0, i32* %type1, align 4
  %7 = load %struct._Object** %a, align 8
  %v2 = getelementptr inbounds %struct._Object* %7, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v2, i32 0, i32 0
  %8 = load i64* %ivalue, align 8
  %9 = load i32* %b.addr, align 4
  %conv = sext i32 %9 to i64
  %cmp = icmp sgt i64 %8, %conv
  %conv3 = zext i1 %cmp to i32
  %conv4 = sext i32 %conv3 to i64
  %10 = load %struct._Object** %ret, align 8
  %v5 = getelementptr inbounds %struct._Object* %10, i32 0, i32 1
  %ivalue6 = getelementptr inbounds %struct._Value* %v5, i32 0, i32 0
  store i64 %conv4, i64* %ivalue6, align 8
  br label %sw.epilog

sw.bb7:                                           ; preds = %do.body
  %11 = load %struct._Object** %ret, align 8
  %type8 = getelementptr inbounds %struct._Object* %11, i32 0, i32 0
  store i32 1, i32* %type8, align 4
  %12 = load %struct._Object** %a, align 8
  %v9 = getelementptr inbounds %struct._Object* %12, i32 0, i32 1
  %dvalue = getelementptr inbounds %struct._Value* %v9, i32 0, i32 1
  %13 = load double* %dvalue, align 8
  %14 = load i32* %b.addr, align 4
  %conv10 = sitofp i32 %14 to double
  %cmp11 = fcmp ogt double %13, %conv10
  %conv12 = zext i1 %cmp11 to i32
  %conv13 = sitofp i32 %conv12 to double
  %15 = load %struct._Object** %ret, align 8
  %v14 = getelementptr inbounds %struct._Object* %15, i32 0, i32 1
  %dvalue15 = getelementptr inbounds %struct._Value* %v14, i32 0, i32 1
  store double %conv13, double* %dvalue15, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %do.body
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb7, %sw.bb
  br label %do.end

do.end:                                           ; preds = %sw.epilog
  %16 = load %struct._Object** %ret, align 8
  ret %struct._Object* %16
}

define %struct._Object* @Object_ltInt(%struct._Object* %_a, i32 %b) nounwind uwtable ssp {
entry:
  %_a.addr = alloca %struct._Object*, align 8
  %b.addr = alloca i32, align 4
  %ret = alloca %struct._Object*, align 8
  %a = alloca %struct._Object*, align 8
  store %struct._Object* %_a, %struct._Object** %_a.addr, align 8
  store i32 %b, i32* %b.addr, align 4
  %call = call i8* @malloc(i64 40)
  %0 = bitcast i8* %call to %struct._Object*
  store %struct._Object* %0, %struct._Object** %ret, align 8
  %1 = load %struct._Object** %_a.addr, align 8
  %type = getelementptr inbounds %struct._Object* %1, i32 0, i32 0
  %2 = load i32* %type, align 4
  %cmp = icmp eq i32 %2, 6
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load %struct._Object** %_a.addr, align 8
  %v = getelementptr inbounds %struct._Object* %3, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 3
  %4 = load i8** %ovalue, align 8
  %5 = bitcast i8* %4 to %struct._Object*
  br label %cond.end

cond.false:                                       ; preds = %entry
  %6 = load %struct._Object** %_a.addr, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._Object* [ %5, %cond.true ], [ %6, %cond.false ]
  store %struct._Object* %cond, %struct._Object** %a, align 8
  br label %do.body

do.body:                                          ; preds = %cond.end
  %7 = load %struct._Object** %a, align 8
  %type1 = getelementptr inbounds %struct._Object* %7, i32 0, i32 0
  %8 = load i32* %type1, align 4
  switch i32 %8, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb9
  ]

sw.bb:                                            ; preds = %do.body
  %9 = load %struct._Object** %ret, align 8
  %type2 = getelementptr inbounds %struct._Object* %9, i32 0, i32 0
  store i32 0, i32* %type2, align 4
  %10 = load %struct._Object** %a, align 8
  %v3 = getelementptr inbounds %struct._Object* %10, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v3, i32 0, i32 0
  %11 = load i64* %ivalue, align 8
  %12 = load i32* %b.addr, align 4
  %conv = sext i32 %12 to i64
  %cmp4 = icmp slt i64 %11, %conv
  %conv5 = zext i1 %cmp4 to i32
  %conv6 = sext i32 %conv5 to i64
  %13 = load %struct._Object** %ret, align 8
  %v7 = getelementptr inbounds %struct._Object* %13, i32 0, i32 1
  %ivalue8 = getelementptr inbounds %struct._Value* %v7, i32 0, i32 0
  store i64 %conv6, i64* %ivalue8, align 8
  br label %sw.epilog

sw.bb9:                                           ; preds = %do.body
  %14 = load %struct._Object** %ret, align 8
  %type10 = getelementptr inbounds %struct._Object* %14, i32 0, i32 0
  store i32 1, i32* %type10, align 4
  %15 = load %struct._Object** %a, align 8
  %v11 = getelementptr inbounds %struct._Object* %15, i32 0, i32 1
  %dvalue = getelementptr inbounds %struct._Value* %v11, i32 0, i32 1
  %16 = load double* %dvalue, align 8
  %17 = load i32* %b.addr, align 4
  %conv12 = sitofp i32 %17 to double
  %cmp13 = fcmp olt double %16, %conv12
  %conv14 = zext i1 %cmp13 to i32
  %conv15 = sitofp i32 %conv14 to double
  %18 = load %struct._Object** %ret, align 8
  %v16 = getelementptr inbounds %struct._Object* %18, i32 0, i32 1
  %dvalue17 = getelementptr inbounds %struct._Value* %v16, i32 0, i32 1
  store double %conv15, double* %dvalue17, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %do.body
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb9, %sw.bb
  br label %do.end

do.end:                                           ; preds = %sw.epilog
  %19 = load %struct._Object** %ret, align 8
  ret %struct._Object* %19
}

define %struct._Object* @Object_addInt2(i32 %a, %struct._Object* %_b) nounwind uwtable ssp {
entry:
  %a.addr = alloca i32, align 4
  %_b.addr = alloca %struct._Object*, align 8
  %ret = alloca %struct._Object*, align 8
  %b = alloca %struct._Object*, align 8
  store i32 %a, i32* %a.addr, align 4
  store %struct._Object* %_b, %struct._Object** %_b.addr, align 8
  %call = call i8* @malloc(i64 40)
  %0 = bitcast i8* %call to %struct._Object*
  store %struct._Object* %0, %struct._Object** %ret, align 8
  %1 = load %struct._Object** %_b.addr, align 8
  %v = getelementptr inbounds %struct._Object* %1, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 3
  %2 = load i8** %ovalue, align 8
  %3 = bitcast i8* %2 to %struct._Object*
  store %struct._Object* %3, %struct._Object** %b, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %4 = load %struct._Object** %b, align 8
  %type = getelementptr inbounds %struct._Object* %4, i32 0, i32 0
  %5 = load i32* %type, align 4
  switch i32 %5, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb5
  ]

sw.bb:                                            ; preds = %do.body
  %6 = load %struct._Object** %ret, align 8
  %type1 = getelementptr inbounds %struct._Object* %6, i32 0, i32 0
  store i32 0, i32* %type1, align 4
  %7 = load i32* %a.addr, align 4
  %conv = sext i32 %7 to i64
  %8 = load %struct._Object** %b, align 8
  %v2 = getelementptr inbounds %struct._Object* %8, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v2, i32 0, i32 0
  %9 = load i64* %ivalue, align 8
  %add = add nsw i64 %conv, %9
  %10 = load %struct._Object** %ret, align 8
  %v3 = getelementptr inbounds %struct._Object* %10, i32 0, i32 1
  %ivalue4 = getelementptr inbounds %struct._Value* %v3, i32 0, i32 0
  store i64 %add, i64* %ivalue4, align 8
  br label %sw.epilog

sw.bb5:                                           ; preds = %do.body
  %11 = load %struct._Object** %ret, align 8
  %type6 = getelementptr inbounds %struct._Object* %11, i32 0, i32 0
  store i32 1, i32* %type6, align 4
  %12 = load i32* %a.addr, align 4
  %conv7 = sitofp i32 %12 to double
  %13 = load %struct._Object** %b, align 8
  %v8 = getelementptr inbounds %struct._Object* %13, i32 0, i32 1
  %dvalue = getelementptr inbounds %struct._Value* %v8, i32 0, i32 1
  %14 = load double* %dvalue, align 8
  %add9 = fadd double %conv7, %14
  %15 = load %struct._Object** %ret, align 8
  %v10 = getelementptr inbounds %struct._Object* %15, i32 0, i32 1
  %dvalue11 = getelementptr inbounds %struct._Value* %v10, i32 0, i32 1
  store double %add9, double* %dvalue11, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %do.body
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb5, %sw.bb
  br label %do.end

do.end:                                           ; preds = %sw.epilog
  %16 = load %struct._Object** %ret, align 8
  ret %struct._Object* %16
}

define %struct._Object* @Object_subInt2(i32 %a, %struct._Object* %_b) nounwind uwtable ssp {
entry:
  %a.addr = alloca i32, align 4
  %_b.addr = alloca %struct._Object*, align 8
  %ret = alloca %struct._Object*, align 8
  %b = alloca %struct._Object*, align 8
  store i32 %a, i32* %a.addr, align 4
  store %struct._Object* %_b, %struct._Object** %_b.addr, align 8
  %call = call i8* @malloc(i64 40)
  %0 = bitcast i8* %call to %struct._Object*
  store %struct._Object* %0, %struct._Object** %ret, align 8
  %1 = load %struct._Object** %_b.addr, align 8
  %v = getelementptr inbounds %struct._Object* %1, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 3
  %2 = load i8** %ovalue, align 8
  %3 = bitcast i8* %2 to %struct._Object*
  store %struct._Object* %3, %struct._Object** %b, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %4 = load %struct._Object** %b, align 8
  %type = getelementptr inbounds %struct._Object* %4, i32 0, i32 0
  %5 = load i32* %type, align 4
  switch i32 %5, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb5
  ]

sw.bb:                                            ; preds = %do.body
  %6 = load %struct._Object** %ret, align 8
  %type1 = getelementptr inbounds %struct._Object* %6, i32 0, i32 0
  store i32 0, i32* %type1, align 4
  %7 = load i32* %a.addr, align 4
  %conv = sext i32 %7 to i64
  %8 = load %struct._Object** %b, align 8
  %v2 = getelementptr inbounds %struct._Object* %8, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v2, i32 0, i32 0
  %9 = load i64* %ivalue, align 8
  %sub = sub nsw i64 %conv, %9
  %10 = load %struct._Object** %ret, align 8
  %v3 = getelementptr inbounds %struct._Object* %10, i32 0, i32 1
  %ivalue4 = getelementptr inbounds %struct._Value* %v3, i32 0, i32 0
  store i64 %sub, i64* %ivalue4, align 8
  br label %sw.epilog

sw.bb5:                                           ; preds = %do.body
  %11 = load %struct._Object** %ret, align 8
  %type6 = getelementptr inbounds %struct._Object* %11, i32 0, i32 0
  store i32 1, i32* %type6, align 4
  %12 = load i32* %a.addr, align 4
  %conv7 = sitofp i32 %12 to double
  %13 = load %struct._Object** %b, align 8
  %v8 = getelementptr inbounds %struct._Object* %13, i32 0, i32 1
  %dvalue = getelementptr inbounds %struct._Value* %v8, i32 0, i32 1
  %14 = load double* %dvalue, align 8
  %sub9 = fsub double %conv7, %14
  %15 = load %struct._Object** %ret, align 8
  %v10 = getelementptr inbounds %struct._Object* %15, i32 0, i32 1
  %dvalue11 = getelementptr inbounds %struct._Value* %v10, i32 0, i32 1
  store double %sub9, double* %dvalue11, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %do.body
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb5, %sw.bb
  br label %do.end

do.end:                                           ; preds = %sw.epilog
  %16 = load %struct._Object** %ret, align 8
  ret %struct._Object* %16
}

define %struct._Object* @Object_mulInt2(i32 %a, %struct._Object* %_b) nounwind uwtable ssp {
entry:
  %a.addr = alloca i32, align 4
  %_b.addr = alloca %struct._Object*, align 8
  %ret = alloca %struct._Object*, align 8
  %b = alloca %struct._Object*, align 8
  store i32 %a, i32* %a.addr, align 4
  store %struct._Object* %_b, %struct._Object** %_b.addr, align 8
  %call = call i8* @malloc(i64 40)
  %0 = bitcast i8* %call to %struct._Object*
  store %struct._Object* %0, %struct._Object** %ret, align 8
  %1 = load %struct._Object** %_b.addr, align 8
  %v = getelementptr inbounds %struct._Object* %1, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 3
  %2 = load i8** %ovalue, align 8
  %3 = bitcast i8* %2 to %struct._Object*
  store %struct._Object* %3, %struct._Object** %b, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %4 = load %struct._Object** %b, align 8
  %type = getelementptr inbounds %struct._Object* %4, i32 0, i32 0
  %5 = load i32* %type, align 4
  switch i32 %5, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb5
  ]

sw.bb:                                            ; preds = %do.body
  %6 = load %struct._Object** %ret, align 8
  %type1 = getelementptr inbounds %struct._Object* %6, i32 0, i32 0
  store i32 0, i32* %type1, align 4
  %7 = load i32* %a.addr, align 4
  %conv = sext i32 %7 to i64
  %8 = load %struct._Object** %b, align 8
  %v2 = getelementptr inbounds %struct._Object* %8, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v2, i32 0, i32 0
  %9 = load i64* %ivalue, align 8
  %mul = mul nsw i64 %conv, %9
  %10 = load %struct._Object** %ret, align 8
  %v3 = getelementptr inbounds %struct._Object* %10, i32 0, i32 1
  %ivalue4 = getelementptr inbounds %struct._Value* %v3, i32 0, i32 0
  store i64 %mul, i64* %ivalue4, align 8
  br label %sw.epilog

sw.bb5:                                           ; preds = %do.body
  %11 = load %struct._Object** %ret, align 8
  %type6 = getelementptr inbounds %struct._Object* %11, i32 0, i32 0
  store i32 1, i32* %type6, align 4
  %12 = load i32* %a.addr, align 4
  %conv7 = sitofp i32 %12 to double
  %13 = load %struct._Object** %b, align 8
  %v8 = getelementptr inbounds %struct._Object* %13, i32 0, i32 1
  %dvalue = getelementptr inbounds %struct._Value* %v8, i32 0, i32 1
  %14 = load double* %dvalue, align 8
  %mul9 = fmul double %conv7, %14
  %15 = load %struct._Object** %ret, align 8
  %v10 = getelementptr inbounds %struct._Object* %15, i32 0, i32 1
  %dvalue11 = getelementptr inbounds %struct._Value* %v10, i32 0, i32 1
  store double %mul9, double* %dvalue11, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %do.body
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb5, %sw.bb
  br label %do.end

do.end:                                           ; preds = %sw.epilog
  %16 = load %struct._Object** %ret, align 8
  ret %struct._Object* %16
}

define %struct._Object* @Object_divInt2(i32 %a, %struct._Object* %_b) nounwind uwtable ssp {
entry:
  %a.addr = alloca i32, align 4
  %_b.addr = alloca %struct._Object*, align 8
  %ret = alloca %struct._Object*, align 8
  %b = alloca %struct._Object*, align 8
  store i32 %a, i32* %a.addr, align 4
  store %struct._Object* %_b, %struct._Object** %_b.addr, align 8
  %call = call i8* @malloc(i64 40)
  %0 = bitcast i8* %call to %struct._Object*
  store %struct._Object* %0, %struct._Object** %ret, align 8
  %1 = load %struct._Object** %_b.addr, align 8
  %v = getelementptr inbounds %struct._Object* %1, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 3
  %2 = load i8** %ovalue, align 8
  %3 = bitcast i8* %2 to %struct._Object*
  store %struct._Object* %3, %struct._Object** %b, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %4 = load %struct._Object** %b, align 8
  %type = getelementptr inbounds %struct._Object* %4, i32 0, i32 0
  %5 = load i32* %type, align 4
  switch i32 %5, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb5
  ]

sw.bb:                                            ; preds = %do.body
  %6 = load %struct._Object** %ret, align 8
  %type1 = getelementptr inbounds %struct._Object* %6, i32 0, i32 0
  store i32 0, i32* %type1, align 4
  %7 = load i32* %a.addr, align 4
  %conv = sext i32 %7 to i64
  %8 = load %struct._Object** %b, align 8
  %v2 = getelementptr inbounds %struct._Object* %8, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v2, i32 0, i32 0
  %9 = load i64* %ivalue, align 8
  %div = sdiv i64 %conv, %9
  %10 = load %struct._Object** %ret, align 8
  %v3 = getelementptr inbounds %struct._Object* %10, i32 0, i32 1
  %ivalue4 = getelementptr inbounds %struct._Value* %v3, i32 0, i32 0
  store i64 %div, i64* %ivalue4, align 8
  br label %sw.epilog

sw.bb5:                                           ; preds = %do.body
  %11 = load %struct._Object** %ret, align 8
  %type6 = getelementptr inbounds %struct._Object* %11, i32 0, i32 0
  store i32 1, i32* %type6, align 4
  %12 = load i32* %a.addr, align 4
  %conv7 = sitofp i32 %12 to double
  %13 = load %struct._Object** %b, align 8
  %v8 = getelementptr inbounds %struct._Object* %13, i32 0, i32 1
  %dvalue = getelementptr inbounds %struct._Value* %v8, i32 0, i32 1
  %14 = load double* %dvalue, align 8
  %div9 = fdiv double %conv7, %14
  %15 = load %struct._Object** %ret, align 8
  %v10 = getelementptr inbounds %struct._Object* %15, i32 0, i32 1
  %dvalue11 = getelementptr inbounds %struct._Value* %v10, i32 0, i32 1
  store double %div9, double* %dvalue11, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %do.body
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb5, %sw.bb
  br label %do.end

do.end:                                           ; preds = %sw.epilog
  %16 = load %struct._Object** %ret, align 8
  ret %struct._Object* %16
}

define %struct._Object* @Object_eqInt2(i32 %a, %struct._Object* %_b) nounwind uwtable ssp {
entry:
  %a.addr = alloca i32, align 4
  %_b.addr = alloca %struct._Object*, align 8
  %ret = alloca %struct._Object*, align 8
  %b = alloca %struct._Object*, align 8
  store i32 %a, i32* %a.addr, align 4
  store %struct._Object* %_b, %struct._Object** %_b.addr, align 8
  %call = call i8* @malloc(i64 40)
  %0 = bitcast i8* %call to %struct._Object*
  store %struct._Object* %0, %struct._Object** %ret, align 8
  %1 = load %struct._Object** %_b.addr, align 8
  %v = getelementptr inbounds %struct._Object* %1, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 3
  %2 = load i8** %ovalue, align 8
  %3 = bitcast i8* %2 to %struct._Object*
  store %struct._Object* %3, %struct._Object** %b, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %4 = load %struct._Object** %b, align 8
  %type = getelementptr inbounds %struct._Object* %4, i32 0, i32 0
  %5 = load i32* %type, align 4
  switch i32 %5, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb7
  ]

sw.bb:                                            ; preds = %do.body
  %6 = load %struct._Object** %ret, align 8
  %type1 = getelementptr inbounds %struct._Object* %6, i32 0, i32 0
  store i32 0, i32* %type1, align 4
  %7 = load i32* %a.addr, align 4
  %conv = sext i32 %7 to i64
  %8 = load %struct._Object** %b, align 8
  %v2 = getelementptr inbounds %struct._Object* %8, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v2, i32 0, i32 0
  %9 = load i64* %ivalue, align 8
  %cmp = icmp eq i64 %conv, %9
  %conv3 = zext i1 %cmp to i32
  %conv4 = sext i32 %conv3 to i64
  %10 = load %struct._Object** %ret, align 8
  %v5 = getelementptr inbounds %struct._Object* %10, i32 0, i32 1
  %ivalue6 = getelementptr inbounds %struct._Value* %v5, i32 0, i32 0
  store i64 %conv4, i64* %ivalue6, align 8
  br label %sw.epilog

sw.bb7:                                           ; preds = %do.body
  %11 = load %struct._Object** %ret, align 8
  %type8 = getelementptr inbounds %struct._Object* %11, i32 0, i32 0
  store i32 1, i32* %type8, align 4
  %12 = load i32* %a.addr, align 4
  %conv9 = sitofp i32 %12 to double
  %13 = load %struct._Object** %b, align 8
  %v10 = getelementptr inbounds %struct._Object* %13, i32 0, i32 1
  %dvalue = getelementptr inbounds %struct._Value* %v10, i32 0, i32 1
  %14 = load double* %dvalue, align 8
  %cmp11 = fcmp oeq double %conv9, %14
  %conv12 = zext i1 %cmp11 to i32
  %conv13 = sitofp i32 %conv12 to double
  %15 = load %struct._Object** %ret, align 8
  %v14 = getelementptr inbounds %struct._Object* %15, i32 0, i32 1
  %dvalue15 = getelementptr inbounds %struct._Value* %v14, i32 0, i32 1
  store double %conv13, double* %dvalue15, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %do.body
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb7, %sw.bb
  br label %do.end

do.end:                                           ; preds = %sw.epilog
  %16 = load %struct._Object** %ret, align 8
  ret %struct._Object* %16
}

define %struct._Object* @Object_neInt2(i32 %a, %struct._Object* %_b) nounwind uwtable ssp {
entry:
  %a.addr = alloca i32, align 4
  %_b.addr = alloca %struct._Object*, align 8
  %ret = alloca %struct._Object*, align 8
  %b = alloca %struct._Object*, align 8
  store i32 %a, i32* %a.addr, align 4
  store %struct._Object* %_b, %struct._Object** %_b.addr, align 8
  %call = call i8* @malloc(i64 40)
  %0 = bitcast i8* %call to %struct._Object*
  store %struct._Object* %0, %struct._Object** %ret, align 8
  %1 = load %struct._Object** %_b.addr, align 8
  %v = getelementptr inbounds %struct._Object* %1, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 3
  %2 = load i8** %ovalue, align 8
  %3 = bitcast i8* %2 to %struct._Object*
  store %struct._Object* %3, %struct._Object** %b, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %4 = load %struct._Object** %b, align 8
  %type = getelementptr inbounds %struct._Object* %4, i32 0, i32 0
  %5 = load i32* %type, align 4
  switch i32 %5, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb7
  ]

sw.bb:                                            ; preds = %do.body
  %6 = load %struct._Object** %ret, align 8
  %type1 = getelementptr inbounds %struct._Object* %6, i32 0, i32 0
  store i32 0, i32* %type1, align 4
  %7 = load i32* %a.addr, align 4
  %conv = sext i32 %7 to i64
  %8 = load %struct._Object** %b, align 8
  %v2 = getelementptr inbounds %struct._Object* %8, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v2, i32 0, i32 0
  %9 = load i64* %ivalue, align 8
  %cmp = icmp ne i64 %conv, %9
  %conv3 = zext i1 %cmp to i32
  %conv4 = sext i32 %conv3 to i64
  %10 = load %struct._Object** %ret, align 8
  %v5 = getelementptr inbounds %struct._Object* %10, i32 0, i32 1
  %ivalue6 = getelementptr inbounds %struct._Value* %v5, i32 0, i32 0
  store i64 %conv4, i64* %ivalue6, align 8
  br label %sw.epilog

sw.bb7:                                           ; preds = %do.body
  %11 = load %struct._Object** %ret, align 8
  %type8 = getelementptr inbounds %struct._Object* %11, i32 0, i32 0
  store i32 1, i32* %type8, align 4
  %12 = load i32* %a.addr, align 4
  %conv9 = sitofp i32 %12 to double
  %13 = load %struct._Object** %b, align 8
  %v10 = getelementptr inbounds %struct._Object* %13, i32 0, i32 1
  %dvalue = getelementptr inbounds %struct._Value* %v10, i32 0, i32 1
  %14 = load double* %dvalue, align 8
  %cmp11 = fcmp une double %conv9, %14
  %conv12 = zext i1 %cmp11 to i32
  %conv13 = sitofp i32 %conv12 to double
  %15 = load %struct._Object** %ret, align 8
  %v14 = getelementptr inbounds %struct._Object* %15, i32 0, i32 1
  %dvalue15 = getelementptr inbounds %struct._Value* %v14, i32 0, i32 1
  store double %conv13, double* %dvalue15, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %do.body
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb7, %sw.bb
  br label %do.end

do.end:                                           ; preds = %sw.epilog
  %16 = load %struct._Object** %ret, align 8
  ret %struct._Object* %16
}

define %struct._Object* @Object_gtInt2(i32 %a, %struct._Object* %_b) nounwind uwtable ssp {
entry:
  %a.addr = alloca i32, align 4
  %_b.addr = alloca %struct._Object*, align 8
  %ret = alloca %struct._Object*, align 8
  %b = alloca %struct._Object*, align 8
  store i32 %a, i32* %a.addr, align 4
  store %struct._Object* %_b, %struct._Object** %_b.addr, align 8
  %call = call i8* @malloc(i64 40)
  %0 = bitcast i8* %call to %struct._Object*
  store %struct._Object* %0, %struct._Object** %ret, align 8
  %1 = load %struct._Object** %_b.addr, align 8
  %v = getelementptr inbounds %struct._Object* %1, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 3
  %2 = load i8** %ovalue, align 8
  %3 = bitcast i8* %2 to %struct._Object*
  store %struct._Object* %3, %struct._Object** %b, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %4 = load %struct._Object** %b, align 8
  %type = getelementptr inbounds %struct._Object* %4, i32 0, i32 0
  %5 = load i32* %type, align 4
  switch i32 %5, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb7
  ]

sw.bb:                                            ; preds = %do.body
  %6 = load %struct._Object** %ret, align 8
  %type1 = getelementptr inbounds %struct._Object* %6, i32 0, i32 0
  store i32 0, i32* %type1, align 4
  %7 = load i32* %a.addr, align 4
  %conv = sext i32 %7 to i64
  %8 = load %struct._Object** %b, align 8
  %v2 = getelementptr inbounds %struct._Object* %8, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v2, i32 0, i32 0
  %9 = load i64* %ivalue, align 8
  %cmp = icmp sgt i64 %conv, %9
  %conv3 = zext i1 %cmp to i32
  %conv4 = sext i32 %conv3 to i64
  %10 = load %struct._Object** %ret, align 8
  %v5 = getelementptr inbounds %struct._Object* %10, i32 0, i32 1
  %ivalue6 = getelementptr inbounds %struct._Value* %v5, i32 0, i32 0
  store i64 %conv4, i64* %ivalue6, align 8
  br label %sw.epilog

sw.bb7:                                           ; preds = %do.body
  %11 = load %struct._Object** %ret, align 8
  %type8 = getelementptr inbounds %struct._Object* %11, i32 0, i32 0
  store i32 1, i32* %type8, align 4
  %12 = load i32* %a.addr, align 4
  %conv9 = sitofp i32 %12 to double
  %13 = load %struct._Object** %b, align 8
  %v10 = getelementptr inbounds %struct._Object* %13, i32 0, i32 1
  %dvalue = getelementptr inbounds %struct._Value* %v10, i32 0, i32 1
  %14 = load double* %dvalue, align 8
  %cmp11 = fcmp ogt double %conv9, %14
  %conv12 = zext i1 %cmp11 to i32
  %conv13 = sitofp i32 %conv12 to double
  %15 = load %struct._Object** %ret, align 8
  %v14 = getelementptr inbounds %struct._Object* %15, i32 0, i32 1
  %dvalue15 = getelementptr inbounds %struct._Value* %v14, i32 0, i32 1
  store double %conv13, double* %dvalue15, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %do.body
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb7, %sw.bb
  br label %do.end

do.end:                                           ; preds = %sw.epilog
  %16 = load %struct._Object** %ret, align 8
  ret %struct._Object* %16
}

define %struct._Object* @Object_ltInt2(i32 %a, %struct._Object* %_b) nounwind uwtable ssp {
entry:
  %a.addr = alloca i32, align 4
  %_b.addr = alloca %struct._Object*, align 8
  %ret = alloca %struct._Object*, align 8
  %b = alloca %struct._Object*, align 8
  store i32 %a, i32* %a.addr, align 4
  store %struct._Object* %_b, %struct._Object** %_b.addr, align 8
  %call = call i8* @malloc(i64 40)
  %0 = bitcast i8* %call to %struct._Object*
  store %struct._Object* %0, %struct._Object** %ret, align 8
  %1 = load %struct._Object** %_b.addr, align 8
  %v = getelementptr inbounds %struct._Object* %1, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 3
  %2 = load i8** %ovalue, align 8
  %3 = bitcast i8* %2 to %struct._Object*
  store %struct._Object* %3, %struct._Object** %b, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %4 = load %struct._Object** %b, align 8
  %type = getelementptr inbounds %struct._Object* %4, i32 0, i32 0
  %5 = load i32* %type, align 4
  switch i32 %5, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb7
  ]

sw.bb:                                            ; preds = %do.body
  %6 = load %struct._Object** %ret, align 8
  %type1 = getelementptr inbounds %struct._Object* %6, i32 0, i32 0
  store i32 0, i32* %type1, align 4
  %7 = load i32* %a.addr, align 4
  %conv = sext i32 %7 to i64
  %8 = load %struct._Object** %b, align 8
  %v2 = getelementptr inbounds %struct._Object* %8, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v2, i32 0, i32 0
  %9 = load i64* %ivalue, align 8
  %cmp = icmp slt i64 %conv, %9
  %conv3 = zext i1 %cmp to i32
  %conv4 = sext i32 %conv3 to i64
  %10 = load %struct._Object** %ret, align 8
  %v5 = getelementptr inbounds %struct._Object* %10, i32 0, i32 1
  %ivalue6 = getelementptr inbounds %struct._Value* %v5, i32 0, i32 0
  store i64 %conv4, i64* %ivalue6, align 8
  br label %sw.epilog

sw.bb7:                                           ; preds = %do.body
  %11 = load %struct._Object** %ret, align 8
  %type8 = getelementptr inbounds %struct._Object* %11, i32 0, i32 0
  store i32 1, i32* %type8, align 4
  %12 = load i32* %a.addr, align 4
  %conv9 = sitofp i32 %12 to double
  %13 = load %struct._Object** %b, align 8
  %v10 = getelementptr inbounds %struct._Object* %13, i32 0, i32 1
  %dvalue = getelementptr inbounds %struct._Value* %v10, i32 0, i32 1
  %14 = load double* %dvalue, align 8
  %cmp11 = fcmp olt double %conv9, %14
  %conv12 = zext i1 %cmp11 to i32
  %conv13 = sitofp i32 %conv12 to double
  %15 = load %struct._Object** %ret, align 8
  %v14 = getelementptr inbounds %struct._Object* %15, i32 0, i32 1
  %dvalue15 = getelementptr inbounds %struct._Value* %v14, i32 0, i32 1
  store double %conv13, double* %dvalue15, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %do.body
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb7, %sw.bb
  br label %do.end

do.end:                                           ; preds = %sw.epilog
  %16 = load %struct._Object** %ret, align 8
  ret %struct._Object* %16
}

define %struct._Object* @Object_addDouble(%struct._Object* %_a, double %b) nounwind uwtable ssp {
entry:
  %_a.addr = alloca %struct._Object*, align 8
  %b.addr = alloca double, align 8
  %ret = alloca %struct._Object*, align 8
  %a = alloca %struct._Object*, align 8
  store %struct._Object* %_a, %struct._Object** %_a.addr, align 8
  store double %b, double* %b.addr, align 8
  %call = call i8* @malloc(i64 40)
  %0 = bitcast i8* %call to %struct._Object*
  store %struct._Object* %0, %struct._Object** %ret, align 8
  %1 = load %struct._Object** %_a.addr, align 8
  %v = getelementptr inbounds %struct._Object* %1, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 3
  %2 = load i8** %ovalue, align 8
  %3 = bitcast i8* %2 to %struct._Object*
  store %struct._Object* %3, %struct._Object** %a, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %4 = load %struct._Object** %ret, align 8
  %type = getelementptr inbounds %struct._Object* %4, i32 0, i32 0
  store i32 1, i32* %type, align 4
  %5 = load %struct._Object** %a, align 8
  %type1 = getelementptr inbounds %struct._Object* %5, i32 0, i32 0
  %6 = load i32* %type1, align 4
  switch i32 %6, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb4
  ]

sw.bb:                                            ; preds = %do.body
  %7 = load %struct._Object** %a, align 8
  %v2 = getelementptr inbounds %struct._Object* %7, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v2, i32 0, i32 0
  %8 = load i64* %ivalue, align 8
  %conv = sitofp i64 %8 to double
  %9 = load double* %b.addr, align 8
  %add = fadd double %conv, %9
  %10 = load %struct._Object** %ret, align 8
  %v3 = getelementptr inbounds %struct._Object* %10, i32 0, i32 1
  %dvalue = getelementptr inbounds %struct._Value* %v3, i32 0, i32 1
  store double %add, double* %dvalue, align 8
  br label %sw.epilog

sw.bb4:                                           ; preds = %do.body
  %11 = load %struct._Object** %a, align 8
  %v5 = getelementptr inbounds %struct._Object* %11, i32 0, i32 1
  %dvalue6 = getelementptr inbounds %struct._Value* %v5, i32 0, i32 1
  %12 = load double* %dvalue6, align 8
  %13 = load double* %b.addr, align 8
  %add7 = fadd double %12, %13
  %14 = load %struct._Object** %ret, align 8
  %v8 = getelementptr inbounds %struct._Object* %14, i32 0, i32 1
  %dvalue9 = getelementptr inbounds %struct._Value* %v8, i32 0, i32 1
  store double %add7, double* %dvalue9, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %do.body
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb4, %sw.bb
  br label %do.end

do.end:                                           ; preds = %sw.epilog
  %15 = load %struct._Object** %ret, align 8
  ret %struct._Object* %15
}

define %struct._Object* @Object_subDouble(%struct._Object* %_a, double %b) nounwind uwtable ssp {
entry:
  %_a.addr = alloca %struct._Object*, align 8
  %b.addr = alloca double, align 8
  %ret = alloca %struct._Object*, align 8
  %a = alloca %struct._Object*, align 8
  store %struct._Object* %_a, %struct._Object** %_a.addr, align 8
  store double %b, double* %b.addr, align 8
  %call = call i8* @malloc(i64 40)
  %0 = bitcast i8* %call to %struct._Object*
  store %struct._Object* %0, %struct._Object** %ret, align 8
  %1 = load %struct._Object** %_a.addr, align 8
  %v = getelementptr inbounds %struct._Object* %1, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 3
  %2 = load i8** %ovalue, align 8
  %3 = bitcast i8* %2 to %struct._Object*
  store %struct._Object* %3, %struct._Object** %a, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %4 = load %struct._Object** %ret, align 8
  %type = getelementptr inbounds %struct._Object* %4, i32 0, i32 0
  store i32 1, i32* %type, align 4
  %5 = load %struct._Object** %a, align 8
  %type1 = getelementptr inbounds %struct._Object* %5, i32 0, i32 0
  %6 = load i32* %type1, align 4
  switch i32 %6, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb4
  ]

sw.bb:                                            ; preds = %do.body
  %7 = load %struct._Object** %a, align 8
  %v2 = getelementptr inbounds %struct._Object* %7, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v2, i32 0, i32 0
  %8 = load i64* %ivalue, align 8
  %conv = sitofp i64 %8 to double
  %9 = load double* %b.addr, align 8
  %sub = fsub double %conv, %9
  %10 = load %struct._Object** %ret, align 8
  %v3 = getelementptr inbounds %struct._Object* %10, i32 0, i32 1
  %dvalue = getelementptr inbounds %struct._Value* %v3, i32 0, i32 1
  store double %sub, double* %dvalue, align 8
  br label %sw.epilog

sw.bb4:                                           ; preds = %do.body
  %11 = load %struct._Object** %a, align 8
  %v5 = getelementptr inbounds %struct._Object* %11, i32 0, i32 1
  %dvalue6 = getelementptr inbounds %struct._Value* %v5, i32 0, i32 1
  %12 = load double* %dvalue6, align 8
  %13 = load double* %b.addr, align 8
  %sub7 = fsub double %12, %13
  %14 = load %struct._Object** %ret, align 8
  %v8 = getelementptr inbounds %struct._Object* %14, i32 0, i32 1
  %dvalue9 = getelementptr inbounds %struct._Value* %v8, i32 0, i32 1
  store double %sub7, double* %dvalue9, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %do.body
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb4, %sw.bb
  br label %do.end

do.end:                                           ; preds = %sw.epilog
  %15 = load %struct._Object** %ret, align 8
  ret %struct._Object* %15
}

define %struct._Object* @Object_mulDouble(%struct._Object* %_a, double %b) nounwind uwtable ssp {
entry:
  %_a.addr = alloca %struct._Object*, align 8
  %b.addr = alloca double, align 8
  %ret = alloca %struct._Object*, align 8
  %a = alloca %struct._Object*, align 8
  store %struct._Object* %_a, %struct._Object** %_a.addr, align 8
  store double %b, double* %b.addr, align 8
  %call = call i8* @malloc(i64 40)
  %0 = bitcast i8* %call to %struct._Object*
  store %struct._Object* %0, %struct._Object** %ret, align 8
  %1 = load %struct._Object** %_a.addr, align 8
  %v = getelementptr inbounds %struct._Object* %1, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 3
  %2 = load i8** %ovalue, align 8
  %3 = bitcast i8* %2 to %struct._Object*
  store %struct._Object* %3, %struct._Object** %a, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %4 = load %struct._Object** %ret, align 8
  %type = getelementptr inbounds %struct._Object* %4, i32 0, i32 0
  store i32 1, i32* %type, align 4
  %5 = load %struct._Object** %a, align 8
  %type1 = getelementptr inbounds %struct._Object* %5, i32 0, i32 0
  %6 = load i32* %type1, align 4
  switch i32 %6, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb4
  ]

sw.bb:                                            ; preds = %do.body
  %7 = load %struct._Object** %a, align 8
  %v2 = getelementptr inbounds %struct._Object* %7, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v2, i32 0, i32 0
  %8 = load i64* %ivalue, align 8
  %conv = sitofp i64 %8 to double
  %9 = load double* %b.addr, align 8
  %mul = fmul double %conv, %9
  %10 = load %struct._Object** %ret, align 8
  %v3 = getelementptr inbounds %struct._Object* %10, i32 0, i32 1
  %dvalue = getelementptr inbounds %struct._Value* %v3, i32 0, i32 1
  store double %mul, double* %dvalue, align 8
  br label %sw.epilog

sw.bb4:                                           ; preds = %do.body
  %11 = load %struct._Object** %a, align 8
  %v5 = getelementptr inbounds %struct._Object* %11, i32 0, i32 1
  %dvalue6 = getelementptr inbounds %struct._Value* %v5, i32 0, i32 1
  %12 = load double* %dvalue6, align 8
  %13 = load double* %b.addr, align 8
  %mul7 = fmul double %12, %13
  %14 = load %struct._Object** %ret, align 8
  %v8 = getelementptr inbounds %struct._Object* %14, i32 0, i32 1
  %dvalue9 = getelementptr inbounds %struct._Value* %v8, i32 0, i32 1
  store double %mul7, double* %dvalue9, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %do.body
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb4, %sw.bb
  br label %do.end

do.end:                                           ; preds = %sw.epilog
  %15 = load %struct._Object** %ret, align 8
  ret %struct._Object* %15
}

define %struct._Object* @Object_divDouble(%struct._Object* %_a, double %b) nounwind uwtable ssp {
entry:
  %_a.addr = alloca %struct._Object*, align 8
  %b.addr = alloca double, align 8
  %ret = alloca %struct._Object*, align 8
  %a = alloca %struct._Object*, align 8
  store %struct._Object* %_a, %struct._Object** %_a.addr, align 8
  store double %b, double* %b.addr, align 8
  %call = call i8* @malloc(i64 40)
  %0 = bitcast i8* %call to %struct._Object*
  store %struct._Object* %0, %struct._Object** %ret, align 8
  %1 = load %struct._Object** %_a.addr, align 8
  %v = getelementptr inbounds %struct._Object* %1, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 3
  %2 = load i8** %ovalue, align 8
  %3 = bitcast i8* %2 to %struct._Object*
  store %struct._Object* %3, %struct._Object** %a, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %4 = load %struct._Object** %ret, align 8
  %type = getelementptr inbounds %struct._Object* %4, i32 0, i32 0
  store i32 1, i32* %type, align 4
  %5 = load %struct._Object** %a, align 8
  %type1 = getelementptr inbounds %struct._Object* %5, i32 0, i32 0
  %6 = load i32* %type1, align 4
  switch i32 %6, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb4
  ]

sw.bb:                                            ; preds = %do.body
  %7 = load %struct._Object** %a, align 8
  %v2 = getelementptr inbounds %struct._Object* %7, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v2, i32 0, i32 0
  %8 = load i64* %ivalue, align 8
  %conv = sitofp i64 %8 to double
  %9 = load double* %b.addr, align 8
  %div = fdiv double %conv, %9
  %10 = load %struct._Object** %ret, align 8
  %v3 = getelementptr inbounds %struct._Object* %10, i32 0, i32 1
  %dvalue = getelementptr inbounds %struct._Value* %v3, i32 0, i32 1
  store double %div, double* %dvalue, align 8
  br label %sw.epilog

sw.bb4:                                           ; preds = %do.body
  %11 = load %struct._Object** %a, align 8
  %v5 = getelementptr inbounds %struct._Object* %11, i32 0, i32 1
  %dvalue6 = getelementptr inbounds %struct._Value* %v5, i32 0, i32 1
  %12 = load double* %dvalue6, align 8
  %13 = load double* %b.addr, align 8
  %div7 = fdiv double %12, %13
  %14 = load %struct._Object** %ret, align 8
  %v8 = getelementptr inbounds %struct._Object* %14, i32 0, i32 1
  %dvalue9 = getelementptr inbounds %struct._Value* %v8, i32 0, i32 1
  store double %div7, double* %dvalue9, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %do.body
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb4, %sw.bb
  br label %do.end

do.end:                                           ; preds = %sw.epilog
  %15 = load %struct._Object** %ret, align 8
  ret %struct._Object* %15
}

define %struct._Object* @Object_eqDouble(%struct._Object* %_a, double %b) nounwind uwtable ssp {
entry:
  %_a.addr = alloca %struct._Object*, align 8
  %b.addr = alloca double, align 8
  %ret = alloca %struct._Object*, align 8
  %a = alloca %struct._Object*, align 8
  store %struct._Object* %_a, %struct._Object** %_a.addr, align 8
  store double %b, double* %b.addr, align 8
  %call = call i8* @malloc(i64 40)
  %0 = bitcast i8* %call to %struct._Object*
  store %struct._Object* %0, %struct._Object** %ret, align 8
  %1 = load %struct._Object** %_a.addr, align 8
  %v = getelementptr inbounds %struct._Object* %1, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 3
  %2 = load i8** %ovalue, align 8
  %3 = bitcast i8* %2 to %struct._Object*
  store %struct._Object* %3, %struct._Object** %a, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %4 = load %struct._Object** %ret, align 8
  %type = getelementptr inbounds %struct._Object* %4, i32 0, i32 0
  store i32 1, i32* %type, align 4
  %5 = load %struct._Object** %a, align 8
  %type1 = getelementptr inbounds %struct._Object* %5, i32 0, i32 0
  %6 = load i32* %type1, align 4
  switch i32 %6, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb6
  ]

sw.bb:                                            ; preds = %do.body
  %7 = load %struct._Object** %a, align 8
  %v2 = getelementptr inbounds %struct._Object* %7, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v2, i32 0, i32 0
  %8 = load i64* %ivalue, align 8
  %conv = sitofp i64 %8 to double
  %9 = load double* %b.addr, align 8
  %cmp = fcmp oeq double %conv, %9
  %conv3 = zext i1 %cmp to i32
  %conv4 = sitofp i32 %conv3 to double
  %10 = load %struct._Object** %ret, align 8
  %v5 = getelementptr inbounds %struct._Object* %10, i32 0, i32 1
  %dvalue = getelementptr inbounds %struct._Value* %v5, i32 0, i32 1
  store double %conv4, double* %dvalue, align 8
  br label %sw.epilog

sw.bb6:                                           ; preds = %do.body
  %11 = load %struct._Object** %a, align 8
  %v7 = getelementptr inbounds %struct._Object* %11, i32 0, i32 1
  %dvalue8 = getelementptr inbounds %struct._Value* %v7, i32 0, i32 1
  %12 = load double* %dvalue8, align 8
  %13 = load double* %b.addr, align 8
  %cmp9 = fcmp oeq double %12, %13
  %conv10 = zext i1 %cmp9 to i32
  %conv11 = sitofp i32 %conv10 to double
  %14 = load %struct._Object** %ret, align 8
  %v12 = getelementptr inbounds %struct._Object* %14, i32 0, i32 1
  %dvalue13 = getelementptr inbounds %struct._Value* %v12, i32 0, i32 1
  store double %conv11, double* %dvalue13, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %do.body
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb6, %sw.bb
  br label %do.end

do.end:                                           ; preds = %sw.epilog
  %15 = load %struct._Object** %ret, align 8
  ret %struct._Object* %15
}

define %struct._Object* @Object_neDouble(%struct._Object* %_a, double %b) nounwind uwtable ssp {
entry:
  %_a.addr = alloca %struct._Object*, align 8
  %b.addr = alloca double, align 8
  %ret = alloca %struct._Object*, align 8
  %a = alloca %struct._Object*, align 8
  store %struct._Object* %_a, %struct._Object** %_a.addr, align 8
  store double %b, double* %b.addr, align 8
  %call = call i8* @malloc(i64 40)
  %0 = bitcast i8* %call to %struct._Object*
  store %struct._Object* %0, %struct._Object** %ret, align 8
  %1 = load %struct._Object** %_a.addr, align 8
  %v = getelementptr inbounds %struct._Object* %1, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 3
  %2 = load i8** %ovalue, align 8
  %3 = bitcast i8* %2 to %struct._Object*
  store %struct._Object* %3, %struct._Object** %a, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %4 = load %struct._Object** %ret, align 8
  %type = getelementptr inbounds %struct._Object* %4, i32 0, i32 0
  store i32 1, i32* %type, align 4
  %5 = load %struct._Object** %a, align 8
  %type1 = getelementptr inbounds %struct._Object* %5, i32 0, i32 0
  %6 = load i32* %type1, align 4
  switch i32 %6, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb6
  ]

sw.bb:                                            ; preds = %do.body
  %7 = load %struct._Object** %a, align 8
  %v2 = getelementptr inbounds %struct._Object* %7, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v2, i32 0, i32 0
  %8 = load i64* %ivalue, align 8
  %conv = sitofp i64 %8 to double
  %9 = load double* %b.addr, align 8
  %cmp = fcmp une double %conv, %9
  %conv3 = zext i1 %cmp to i32
  %conv4 = sitofp i32 %conv3 to double
  %10 = load %struct._Object** %ret, align 8
  %v5 = getelementptr inbounds %struct._Object* %10, i32 0, i32 1
  %dvalue = getelementptr inbounds %struct._Value* %v5, i32 0, i32 1
  store double %conv4, double* %dvalue, align 8
  br label %sw.epilog

sw.bb6:                                           ; preds = %do.body
  %11 = load %struct._Object** %a, align 8
  %v7 = getelementptr inbounds %struct._Object* %11, i32 0, i32 1
  %dvalue8 = getelementptr inbounds %struct._Value* %v7, i32 0, i32 1
  %12 = load double* %dvalue8, align 8
  %13 = load double* %b.addr, align 8
  %cmp9 = fcmp une double %12, %13
  %conv10 = zext i1 %cmp9 to i32
  %conv11 = sitofp i32 %conv10 to double
  %14 = load %struct._Object** %ret, align 8
  %v12 = getelementptr inbounds %struct._Object* %14, i32 0, i32 1
  %dvalue13 = getelementptr inbounds %struct._Value* %v12, i32 0, i32 1
  store double %conv11, double* %dvalue13, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %do.body
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb6, %sw.bb
  br label %do.end

do.end:                                           ; preds = %sw.epilog
  %15 = load %struct._Object** %ret, align 8
  ret %struct._Object* %15
}

define %struct._Object* @Object_gtDouble(%struct._Object* %_a, double %b) nounwind uwtable ssp {
entry:
  %_a.addr = alloca %struct._Object*, align 8
  %b.addr = alloca double, align 8
  %ret = alloca %struct._Object*, align 8
  %a = alloca %struct._Object*, align 8
  store %struct._Object* %_a, %struct._Object** %_a.addr, align 8
  store double %b, double* %b.addr, align 8
  %call = call i8* @malloc(i64 40)
  %0 = bitcast i8* %call to %struct._Object*
  store %struct._Object* %0, %struct._Object** %ret, align 8
  %1 = load %struct._Object** %_a.addr, align 8
  %v = getelementptr inbounds %struct._Object* %1, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 3
  %2 = load i8** %ovalue, align 8
  %3 = bitcast i8* %2 to %struct._Object*
  store %struct._Object* %3, %struct._Object** %a, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %4 = load %struct._Object** %ret, align 8
  %type = getelementptr inbounds %struct._Object* %4, i32 0, i32 0
  store i32 1, i32* %type, align 4
  %5 = load %struct._Object** %a, align 8
  %type1 = getelementptr inbounds %struct._Object* %5, i32 0, i32 0
  %6 = load i32* %type1, align 4
  switch i32 %6, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb6
  ]

sw.bb:                                            ; preds = %do.body
  %7 = load %struct._Object** %a, align 8
  %v2 = getelementptr inbounds %struct._Object* %7, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v2, i32 0, i32 0
  %8 = load i64* %ivalue, align 8
  %conv = sitofp i64 %8 to double
  %9 = load double* %b.addr, align 8
  %cmp = fcmp ogt double %conv, %9
  %conv3 = zext i1 %cmp to i32
  %conv4 = sitofp i32 %conv3 to double
  %10 = load %struct._Object** %ret, align 8
  %v5 = getelementptr inbounds %struct._Object* %10, i32 0, i32 1
  %dvalue = getelementptr inbounds %struct._Value* %v5, i32 0, i32 1
  store double %conv4, double* %dvalue, align 8
  br label %sw.epilog

sw.bb6:                                           ; preds = %do.body
  %11 = load %struct._Object** %a, align 8
  %v7 = getelementptr inbounds %struct._Object* %11, i32 0, i32 1
  %dvalue8 = getelementptr inbounds %struct._Value* %v7, i32 0, i32 1
  %12 = load double* %dvalue8, align 8
  %13 = load double* %b.addr, align 8
  %cmp9 = fcmp ogt double %12, %13
  %conv10 = zext i1 %cmp9 to i32
  %conv11 = sitofp i32 %conv10 to double
  %14 = load %struct._Object** %ret, align 8
  %v12 = getelementptr inbounds %struct._Object* %14, i32 0, i32 1
  %dvalue13 = getelementptr inbounds %struct._Value* %v12, i32 0, i32 1
  store double %conv11, double* %dvalue13, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %do.body
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb6, %sw.bb
  br label %do.end

do.end:                                           ; preds = %sw.epilog
  %15 = load %struct._Object** %ret, align 8
  ret %struct._Object* %15
}

define %struct._Object* @Object_ltDouble(%struct._Object* %_a, double %b) nounwind uwtable ssp {
entry:
  %_a.addr = alloca %struct._Object*, align 8
  %b.addr = alloca double, align 8
  %ret = alloca %struct._Object*, align 8
  %a = alloca %struct._Object*, align 8
  store %struct._Object* %_a, %struct._Object** %_a.addr, align 8
  store double %b, double* %b.addr, align 8
  %call = call i8* @malloc(i64 40)
  %0 = bitcast i8* %call to %struct._Object*
  store %struct._Object* %0, %struct._Object** %ret, align 8
  %1 = load %struct._Object** %_a.addr, align 8
  %v = getelementptr inbounds %struct._Object* %1, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 3
  %2 = load i8** %ovalue, align 8
  %3 = bitcast i8* %2 to %struct._Object*
  store %struct._Object* %3, %struct._Object** %a, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %4 = load %struct._Object** %ret, align 8
  %type = getelementptr inbounds %struct._Object* %4, i32 0, i32 0
  store i32 1, i32* %type, align 4
  %5 = load %struct._Object** %a, align 8
  %type1 = getelementptr inbounds %struct._Object* %5, i32 0, i32 0
  %6 = load i32* %type1, align 4
  switch i32 %6, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb6
  ]

sw.bb:                                            ; preds = %do.body
  %7 = load %struct._Object** %a, align 8
  %v2 = getelementptr inbounds %struct._Object* %7, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v2, i32 0, i32 0
  %8 = load i64* %ivalue, align 8
  %conv = sitofp i64 %8 to double
  %9 = load double* %b.addr, align 8
  %cmp = fcmp olt double %conv, %9
  %conv3 = zext i1 %cmp to i32
  %conv4 = sitofp i32 %conv3 to double
  %10 = load %struct._Object** %ret, align 8
  %v5 = getelementptr inbounds %struct._Object* %10, i32 0, i32 1
  %dvalue = getelementptr inbounds %struct._Value* %v5, i32 0, i32 1
  store double %conv4, double* %dvalue, align 8
  br label %sw.epilog

sw.bb6:                                           ; preds = %do.body
  %11 = load %struct._Object** %a, align 8
  %v7 = getelementptr inbounds %struct._Object* %11, i32 0, i32 1
  %dvalue8 = getelementptr inbounds %struct._Value* %v7, i32 0, i32 1
  %12 = load double* %dvalue8, align 8
  %13 = load double* %b.addr, align 8
  %cmp9 = fcmp olt double %12, %13
  %conv10 = zext i1 %cmp9 to i32
  %conv11 = sitofp i32 %conv10 to double
  %14 = load %struct._Object** %ret, align 8
  %v12 = getelementptr inbounds %struct._Object* %14, i32 0, i32 1
  %dvalue13 = getelementptr inbounds %struct._Value* %v12, i32 0, i32 1
  store double %conv11, double* %dvalue13, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %do.body
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb6, %sw.bb
  br label %do.end

do.end:                                           ; preds = %sw.epilog
  %15 = load %struct._Object** %ret, align 8
  ret %struct._Object* %15
}

define %struct._Object* @Object_addDouble2(double %a, %struct._Object* %_b) nounwind uwtable ssp {
entry:
  %a.addr = alloca double, align 8
  %_b.addr = alloca %struct._Object*, align 8
  %ret = alloca %struct._Object*, align 8
  %b = alloca %struct._Object*, align 8
  store double %a, double* %a.addr, align 8
  store %struct._Object* %_b, %struct._Object** %_b.addr, align 8
  %call = call i8* @malloc(i64 40)
  %0 = bitcast i8* %call to %struct._Object*
  store %struct._Object* %0, %struct._Object** %ret, align 8
  %1 = load %struct._Object** %_b.addr, align 8
  %v = getelementptr inbounds %struct._Object* %1, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 3
  %2 = load i8** %ovalue, align 8
  %3 = bitcast i8* %2 to %struct._Object*
  store %struct._Object* %3, %struct._Object** %b, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %4 = load %struct._Object** %ret, align 8
  %type = getelementptr inbounds %struct._Object* %4, i32 0, i32 0
  store i32 1, i32* %type, align 4
  %5 = load %struct._Object** %b, align 8
  %type1 = getelementptr inbounds %struct._Object* %5, i32 0, i32 0
  %6 = load i32* %type1, align 4
  switch i32 %6, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb4
  ]

sw.bb:                                            ; preds = %do.body
  %7 = load double* %a.addr, align 8
  %8 = load %struct._Object** %b, align 8
  %v2 = getelementptr inbounds %struct._Object* %8, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v2, i32 0, i32 0
  %9 = load i64* %ivalue, align 8
  %conv = sitofp i64 %9 to double
  %add = fadd double %7, %conv
  %10 = load %struct._Object** %ret, align 8
  %v3 = getelementptr inbounds %struct._Object* %10, i32 0, i32 1
  %dvalue = getelementptr inbounds %struct._Value* %v3, i32 0, i32 1
  store double %add, double* %dvalue, align 8
  br label %sw.epilog

sw.bb4:                                           ; preds = %do.body
  %11 = load double* %a.addr, align 8
  %12 = load %struct._Object** %b, align 8
  %v5 = getelementptr inbounds %struct._Object* %12, i32 0, i32 1
  %dvalue6 = getelementptr inbounds %struct._Value* %v5, i32 0, i32 1
  %13 = load double* %dvalue6, align 8
  %add7 = fadd double %11, %13
  %14 = load %struct._Object** %ret, align 8
  %v8 = getelementptr inbounds %struct._Object* %14, i32 0, i32 1
  %dvalue9 = getelementptr inbounds %struct._Value* %v8, i32 0, i32 1
  store double %add7, double* %dvalue9, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %do.body
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb4, %sw.bb
  br label %do.end

do.end:                                           ; preds = %sw.epilog
  %15 = load %struct._Object** %ret, align 8
  ret %struct._Object* %15
}

define %struct._Object* @Object_subDouble2(double %a, %struct._Object* %_b) nounwind uwtable ssp {
entry:
  %a.addr = alloca double, align 8
  %_b.addr = alloca %struct._Object*, align 8
  %ret = alloca %struct._Object*, align 8
  %b = alloca %struct._Object*, align 8
  store double %a, double* %a.addr, align 8
  store %struct._Object* %_b, %struct._Object** %_b.addr, align 8
  %call = call i8* @malloc(i64 40)
  %0 = bitcast i8* %call to %struct._Object*
  store %struct._Object* %0, %struct._Object** %ret, align 8
  %1 = load %struct._Object** %_b.addr, align 8
  %v = getelementptr inbounds %struct._Object* %1, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 3
  %2 = load i8** %ovalue, align 8
  %3 = bitcast i8* %2 to %struct._Object*
  store %struct._Object* %3, %struct._Object** %b, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %4 = load %struct._Object** %ret, align 8
  %type = getelementptr inbounds %struct._Object* %4, i32 0, i32 0
  store i32 1, i32* %type, align 4
  %5 = load %struct._Object** %b, align 8
  %type1 = getelementptr inbounds %struct._Object* %5, i32 0, i32 0
  %6 = load i32* %type1, align 4
  switch i32 %6, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb4
  ]

sw.bb:                                            ; preds = %do.body
  %7 = load double* %a.addr, align 8
  %8 = load %struct._Object** %b, align 8
  %v2 = getelementptr inbounds %struct._Object* %8, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v2, i32 0, i32 0
  %9 = load i64* %ivalue, align 8
  %conv = sitofp i64 %9 to double
  %add = fadd double %7, %conv
  %10 = load %struct._Object** %ret, align 8
  %v3 = getelementptr inbounds %struct._Object* %10, i32 0, i32 1
  %dvalue = getelementptr inbounds %struct._Value* %v3, i32 0, i32 1
  store double %add, double* %dvalue, align 8
  br label %sw.epilog

sw.bb4:                                           ; preds = %do.body
  %11 = load double* %a.addr, align 8
  %12 = load %struct._Object** %b, align 8
  %v5 = getelementptr inbounds %struct._Object* %12, i32 0, i32 1
  %dvalue6 = getelementptr inbounds %struct._Value* %v5, i32 0, i32 1
  %13 = load double* %dvalue6, align 8
  %add7 = fadd double %11, %13
  %14 = load %struct._Object** %ret, align 8
  %v8 = getelementptr inbounds %struct._Object* %14, i32 0, i32 1
  %dvalue9 = getelementptr inbounds %struct._Value* %v8, i32 0, i32 1
  store double %add7, double* %dvalue9, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %do.body
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb4, %sw.bb
  br label %do.end

do.end:                                           ; preds = %sw.epilog
  %15 = load %struct._Object** %ret, align 8
  ret %struct._Object* %15
}

define %struct._Object* @Object_mulDouble2(double %a, %struct._Object* %_b) nounwind uwtable ssp {
entry:
  %a.addr = alloca double, align 8
  %_b.addr = alloca %struct._Object*, align 8
  %ret = alloca %struct._Object*, align 8
  %b = alloca %struct._Object*, align 8
  store double %a, double* %a.addr, align 8
  store %struct._Object* %_b, %struct._Object** %_b.addr, align 8
  %call = call i8* @malloc(i64 40)
  %0 = bitcast i8* %call to %struct._Object*
  store %struct._Object* %0, %struct._Object** %ret, align 8
  %1 = load %struct._Object** %_b.addr, align 8
  %v = getelementptr inbounds %struct._Object* %1, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 3
  %2 = load i8** %ovalue, align 8
  %3 = bitcast i8* %2 to %struct._Object*
  store %struct._Object* %3, %struct._Object** %b, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %4 = load %struct._Object** %ret, align 8
  %type = getelementptr inbounds %struct._Object* %4, i32 0, i32 0
  store i32 1, i32* %type, align 4
  %5 = load %struct._Object** %b, align 8
  %type1 = getelementptr inbounds %struct._Object* %5, i32 0, i32 0
  %6 = load i32* %type1, align 4
  switch i32 %6, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb4
  ]

sw.bb:                                            ; preds = %do.body
  %7 = load double* %a.addr, align 8
  %8 = load %struct._Object** %b, align 8
  %v2 = getelementptr inbounds %struct._Object* %8, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v2, i32 0, i32 0
  %9 = load i64* %ivalue, align 8
  %conv = sitofp i64 %9 to double
  %mul = fmul double %7, %conv
  %10 = load %struct._Object** %ret, align 8
  %v3 = getelementptr inbounds %struct._Object* %10, i32 0, i32 1
  %dvalue = getelementptr inbounds %struct._Value* %v3, i32 0, i32 1
  store double %mul, double* %dvalue, align 8
  br label %sw.epilog

sw.bb4:                                           ; preds = %do.body
  %11 = load double* %a.addr, align 8
  %12 = load %struct._Object** %b, align 8
  %v5 = getelementptr inbounds %struct._Object* %12, i32 0, i32 1
  %dvalue6 = getelementptr inbounds %struct._Value* %v5, i32 0, i32 1
  %13 = load double* %dvalue6, align 8
  %mul7 = fmul double %11, %13
  %14 = load %struct._Object** %ret, align 8
  %v8 = getelementptr inbounds %struct._Object* %14, i32 0, i32 1
  %dvalue9 = getelementptr inbounds %struct._Value* %v8, i32 0, i32 1
  store double %mul7, double* %dvalue9, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %do.body
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb4, %sw.bb
  br label %do.end

do.end:                                           ; preds = %sw.epilog
  %15 = load %struct._Object** %ret, align 8
  ret %struct._Object* %15
}

define %struct._Object* @Object_divDouble2(double %a, %struct._Object* %_b) nounwind uwtable ssp {
entry:
  %a.addr = alloca double, align 8
  %_b.addr = alloca %struct._Object*, align 8
  %ret = alloca %struct._Object*, align 8
  %b = alloca %struct._Object*, align 8
  store double %a, double* %a.addr, align 8
  store %struct._Object* %_b, %struct._Object** %_b.addr, align 8
  %call = call i8* @malloc(i64 40)
  %0 = bitcast i8* %call to %struct._Object*
  store %struct._Object* %0, %struct._Object** %ret, align 8
  %1 = load %struct._Object** %_b.addr, align 8
  %v = getelementptr inbounds %struct._Object* %1, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 3
  %2 = load i8** %ovalue, align 8
  %3 = bitcast i8* %2 to %struct._Object*
  store %struct._Object* %3, %struct._Object** %b, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %4 = load %struct._Object** %ret, align 8
  %type = getelementptr inbounds %struct._Object* %4, i32 0, i32 0
  store i32 1, i32* %type, align 4
  %5 = load %struct._Object** %b, align 8
  %type1 = getelementptr inbounds %struct._Object* %5, i32 0, i32 0
  %6 = load i32* %type1, align 4
  switch i32 %6, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb4
  ]

sw.bb:                                            ; preds = %do.body
  %7 = load double* %a.addr, align 8
  %8 = load %struct._Object** %b, align 8
  %v2 = getelementptr inbounds %struct._Object* %8, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v2, i32 0, i32 0
  %9 = load i64* %ivalue, align 8
  %conv = sitofp i64 %9 to double
  %div = fdiv double %7, %conv
  %10 = load %struct._Object** %ret, align 8
  %v3 = getelementptr inbounds %struct._Object* %10, i32 0, i32 1
  %dvalue = getelementptr inbounds %struct._Value* %v3, i32 0, i32 1
  store double %div, double* %dvalue, align 8
  br label %sw.epilog

sw.bb4:                                           ; preds = %do.body
  %11 = load double* %a.addr, align 8
  %12 = load %struct._Object** %b, align 8
  %v5 = getelementptr inbounds %struct._Object* %12, i32 0, i32 1
  %dvalue6 = getelementptr inbounds %struct._Value* %v5, i32 0, i32 1
  %13 = load double* %dvalue6, align 8
  %div7 = fdiv double %11, %13
  %14 = load %struct._Object** %ret, align 8
  %v8 = getelementptr inbounds %struct._Object* %14, i32 0, i32 1
  %dvalue9 = getelementptr inbounds %struct._Value* %v8, i32 0, i32 1
  store double %div7, double* %dvalue9, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %do.body
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb4, %sw.bb
  br label %do.end

do.end:                                           ; preds = %sw.epilog
  %15 = load %struct._Object** %ret, align 8
  ret %struct._Object* %15
}

define %struct._Object* @Object_eqDouble2(double %a, %struct._Object* %_b) nounwind uwtable ssp {
entry:
  %a.addr = alloca double, align 8
  %_b.addr = alloca %struct._Object*, align 8
  %ret = alloca %struct._Object*, align 8
  %b = alloca %struct._Object*, align 8
  store double %a, double* %a.addr, align 8
  store %struct._Object* %_b, %struct._Object** %_b.addr, align 8
  %call = call i8* @malloc(i64 40)
  %0 = bitcast i8* %call to %struct._Object*
  store %struct._Object* %0, %struct._Object** %ret, align 8
  %1 = load %struct._Object** %_b.addr, align 8
  %v = getelementptr inbounds %struct._Object* %1, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 3
  %2 = load i8** %ovalue, align 8
  %3 = bitcast i8* %2 to %struct._Object*
  store %struct._Object* %3, %struct._Object** %b, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %4 = load %struct._Object** %ret, align 8
  %type = getelementptr inbounds %struct._Object* %4, i32 0, i32 0
  store i32 1, i32* %type, align 4
  %5 = load %struct._Object** %b, align 8
  %type1 = getelementptr inbounds %struct._Object* %5, i32 0, i32 0
  %6 = load i32* %type1, align 4
  switch i32 %6, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb6
  ]

sw.bb:                                            ; preds = %do.body
  %7 = load double* %a.addr, align 8
  %8 = load %struct._Object** %b, align 8
  %v2 = getelementptr inbounds %struct._Object* %8, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v2, i32 0, i32 0
  %9 = load i64* %ivalue, align 8
  %conv = sitofp i64 %9 to double
  %cmp = fcmp oeq double %7, %conv
  %conv3 = zext i1 %cmp to i32
  %conv4 = sitofp i32 %conv3 to double
  %10 = load %struct._Object** %ret, align 8
  %v5 = getelementptr inbounds %struct._Object* %10, i32 0, i32 1
  %dvalue = getelementptr inbounds %struct._Value* %v5, i32 0, i32 1
  store double %conv4, double* %dvalue, align 8
  br label %sw.epilog

sw.bb6:                                           ; preds = %do.body
  %11 = load double* %a.addr, align 8
  %12 = load %struct._Object** %b, align 8
  %v7 = getelementptr inbounds %struct._Object* %12, i32 0, i32 1
  %dvalue8 = getelementptr inbounds %struct._Value* %v7, i32 0, i32 1
  %13 = load double* %dvalue8, align 8
  %cmp9 = fcmp oeq double %11, %13
  %conv10 = zext i1 %cmp9 to i32
  %conv11 = sitofp i32 %conv10 to double
  %14 = load %struct._Object** %ret, align 8
  %v12 = getelementptr inbounds %struct._Object* %14, i32 0, i32 1
  %dvalue13 = getelementptr inbounds %struct._Value* %v12, i32 0, i32 1
  store double %conv11, double* %dvalue13, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %do.body
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb6, %sw.bb
  br label %do.end

do.end:                                           ; preds = %sw.epilog
  %15 = load %struct._Object** %ret, align 8
  ret %struct._Object* %15
}

define %struct._Object* @Object_neDouble2(double %a, %struct._Object* %_b) nounwind uwtable ssp {
entry:
  %a.addr = alloca double, align 8
  %_b.addr = alloca %struct._Object*, align 8
  %ret = alloca %struct._Object*, align 8
  %b = alloca %struct._Object*, align 8
  store double %a, double* %a.addr, align 8
  store %struct._Object* %_b, %struct._Object** %_b.addr, align 8
  %call = call i8* @malloc(i64 40)
  %0 = bitcast i8* %call to %struct._Object*
  store %struct._Object* %0, %struct._Object** %ret, align 8
  %1 = load %struct._Object** %_b.addr, align 8
  %v = getelementptr inbounds %struct._Object* %1, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 3
  %2 = load i8** %ovalue, align 8
  %3 = bitcast i8* %2 to %struct._Object*
  store %struct._Object* %3, %struct._Object** %b, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %4 = load %struct._Object** %ret, align 8
  %type = getelementptr inbounds %struct._Object* %4, i32 0, i32 0
  store i32 1, i32* %type, align 4
  %5 = load %struct._Object** %b, align 8
  %type1 = getelementptr inbounds %struct._Object* %5, i32 0, i32 0
  %6 = load i32* %type1, align 4
  switch i32 %6, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb6
  ]

sw.bb:                                            ; preds = %do.body
  %7 = load double* %a.addr, align 8
  %8 = load %struct._Object** %b, align 8
  %v2 = getelementptr inbounds %struct._Object* %8, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v2, i32 0, i32 0
  %9 = load i64* %ivalue, align 8
  %conv = sitofp i64 %9 to double
  %cmp = fcmp une double %7, %conv
  %conv3 = zext i1 %cmp to i32
  %conv4 = sitofp i32 %conv3 to double
  %10 = load %struct._Object** %ret, align 8
  %v5 = getelementptr inbounds %struct._Object* %10, i32 0, i32 1
  %dvalue = getelementptr inbounds %struct._Value* %v5, i32 0, i32 1
  store double %conv4, double* %dvalue, align 8
  br label %sw.epilog

sw.bb6:                                           ; preds = %do.body
  %11 = load double* %a.addr, align 8
  %12 = load %struct._Object** %b, align 8
  %v7 = getelementptr inbounds %struct._Object* %12, i32 0, i32 1
  %dvalue8 = getelementptr inbounds %struct._Value* %v7, i32 0, i32 1
  %13 = load double* %dvalue8, align 8
  %cmp9 = fcmp une double %11, %13
  %conv10 = zext i1 %cmp9 to i32
  %conv11 = sitofp i32 %conv10 to double
  %14 = load %struct._Object** %ret, align 8
  %v12 = getelementptr inbounds %struct._Object* %14, i32 0, i32 1
  %dvalue13 = getelementptr inbounds %struct._Value* %v12, i32 0, i32 1
  store double %conv11, double* %dvalue13, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %do.body
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb6, %sw.bb
  br label %do.end

do.end:                                           ; preds = %sw.epilog
  %15 = load %struct._Object** %ret, align 8
  ret %struct._Object* %15
}

define %struct._Object* @Object_gtDouble2(double %a, %struct._Object* %_b) nounwind uwtable ssp {
entry:
  %a.addr = alloca double, align 8
  %_b.addr = alloca %struct._Object*, align 8
  %ret = alloca %struct._Object*, align 8
  %b = alloca %struct._Object*, align 8
  store double %a, double* %a.addr, align 8
  store %struct._Object* %_b, %struct._Object** %_b.addr, align 8
  %call = call i8* @malloc(i64 40)
  %0 = bitcast i8* %call to %struct._Object*
  store %struct._Object* %0, %struct._Object** %ret, align 8
  %1 = load %struct._Object** %_b.addr, align 8
  %v = getelementptr inbounds %struct._Object* %1, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 3
  %2 = load i8** %ovalue, align 8
  %3 = bitcast i8* %2 to %struct._Object*
  store %struct._Object* %3, %struct._Object** %b, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %4 = load %struct._Object** %ret, align 8
  %type = getelementptr inbounds %struct._Object* %4, i32 0, i32 0
  store i32 1, i32* %type, align 4
  %5 = load %struct._Object** %b, align 8
  %type1 = getelementptr inbounds %struct._Object* %5, i32 0, i32 0
  %6 = load i32* %type1, align 4
  switch i32 %6, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb6
  ]

sw.bb:                                            ; preds = %do.body
  %7 = load double* %a.addr, align 8
  %8 = load %struct._Object** %b, align 8
  %v2 = getelementptr inbounds %struct._Object* %8, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v2, i32 0, i32 0
  %9 = load i64* %ivalue, align 8
  %conv = sitofp i64 %9 to double
  %cmp = fcmp ogt double %7, %conv
  %conv3 = zext i1 %cmp to i32
  %conv4 = sitofp i32 %conv3 to double
  %10 = load %struct._Object** %ret, align 8
  %v5 = getelementptr inbounds %struct._Object* %10, i32 0, i32 1
  %dvalue = getelementptr inbounds %struct._Value* %v5, i32 0, i32 1
  store double %conv4, double* %dvalue, align 8
  br label %sw.epilog

sw.bb6:                                           ; preds = %do.body
  %11 = load double* %a.addr, align 8
  %12 = load %struct._Object** %b, align 8
  %v7 = getelementptr inbounds %struct._Object* %12, i32 0, i32 1
  %dvalue8 = getelementptr inbounds %struct._Value* %v7, i32 0, i32 1
  %13 = load double* %dvalue8, align 8
  %cmp9 = fcmp ogt double %11, %13
  %conv10 = zext i1 %cmp9 to i32
  %conv11 = sitofp i32 %conv10 to double
  %14 = load %struct._Object** %ret, align 8
  %v12 = getelementptr inbounds %struct._Object* %14, i32 0, i32 1
  %dvalue13 = getelementptr inbounds %struct._Value* %v12, i32 0, i32 1
  store double %conv11, double* %dvalue13, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %do.body
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb6, %sw.bb
  br label %do.end

do.end:                                           ; preds = %sw.epilog
  %15 = load %struct._Object** %ret, align 8
  ret %struct._Object* %15
}

define %struct._Object* @Object_ltDouble2(double %a, %struct._Object* %_b) nounwind uwtable ssp {
entry:
  %a.addr = alloca double, align 8
  %_b.addr = alloca %struct._Object*, align 8
  %ret = alloca %struct._Object*, align 8
  %b = alloca %struct._Object*, align 8
  store double %a, double* %a.addr, align 8
  store %struct._Object* %_b, %struct._Object** %_b.addr, align 8
  %call = call i8* @malloc(i64 40)
  %0 = bitcast i8* %call to %struct._Object*
  store %struct._Object* %0, %struct._Object** %ret, align 8
  %1 = load %struct._Object** %_b.addr, align 8
  %v = getelementptr inbounds %struct._Object* %1, i32 0, i32 1
  %ovalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 3
  %2 = load i8** %ovalue, align 8
  %3 = bitcast i8* %2 to %struct._Object*
  store %struct._Object* %3, %struct._Object** %b, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  %4 = load %struct._Object** %ret, align 8
  %type = getelementptr inbounds %struct._Object* %4, i32 0, i32 0
  store i32 1, i32* %type, align 4
  %5 = load %struct._Object** %b, align 8
  %type1 = getelementptr inbounds %struct._Object* %5, i32 0, i32 0
  %6 = load i32* %type1, align 4
  switch i32 %6, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb6
  ]

sw.bb:                                            ; preds = %do.body
  %7 = load double* %a.addr, align 8
  %8 = load %struct._Object** %b, align 8
  %v2 = getelementptr inbounds %struct._Object* %8, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v2, i32 0, i32 0
  %9 = load i64* %ivalue, align 8
  %conv = sitofp i64 %9 to double
  %cmp = fcmp olt double %7, %conv
  %conv3 = zext i1 %cmp to i32
  %conv4 = sitofp i32 %conv3 to double
  %10 = load %struct._Object** %ret, align 8
  %v5 = getelementptr inbounds %struct._Object* %10, i32 0, i32 1
  %dvalue = getelementptr inbounds %struct._Value* %v5, i32 0, i32 1
  store double %conv4, double* %dvalue, align 8
  br label %sw.epilog

sw.bb6:                                           ; preds = %do.body
  %11 = load double* %a.addr, align 8
  %12 = load %struct._Object** %b, align 8
  %v7 = getelementptr inbounds %struct._Object* %12, i32 0, i32 1
  %dvalue8 = getelementptr inbounds %struct._Value* %v7, i32 0, i32 1
  %13 = load double* %dvalue8, align 8
  %cmp9 = fcmp olt double %11, %13
  %conv10 = zext i1 %cmp9 to i32
  %conv11 = sitofp i32 %conv10 to double
  %14 = load %struct._Object** %ret, align 8
  %v12 = getelementptr inbounds %struct._Object* %14, i32 0, i32 1
  %dvalue13 = getelementptr inbounds %struct._Value* %v12, i32 0, i32 1
  store double %conv11, double* %dvalue13, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %do.body
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb6, %sw.bb
  br label %do.end

do.end:                                           ; preds = %sw.epilog
  %15 = load %struct._Object** %ret, align 8
  ret %struct._Object* %15
}

define i32 @Object_isTrue(%struct._Object* %a) nounwind uwtable ssp {
entry:
  %a.addr = alloca %struct._Object*, align 8
  %ret = alloca i32, align 4
  store %struct._Object* %a, %struct._Object** %a.addr, align 8
  store i32 0, i32* %ret, align 4
  %0 = load %struct._Object** %a.addr, align 8
  %type = getelementptr inbounds %struct._Object* %0, i32 0, i32 0
  %1 = load i32* %type, align 4
  switch i32 %1, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ]

sw.bb:                                            ; preds = %entry
  %2 = load %struct._Object** %a.addr, align 8
  %v = getelementptr inbounds %struct._Object* %2, i32 0, i32 1
  %ivalue = getelementptr inbounds %struct._Value* %v, i32 0, i32 0
  %3 = load i64* %ivalue, align 8
  %cmp = icmp ne i64 %3, 0
  %conv = zext i1 %cmp to i32
  store i32 %conv, i32* %ret, align 4
  br label %sw.epilog

sw.bb1:                                           ; preds = %entry
  %4 = load %struct._Object** %a.addr, align 8
  %v2 = getelementptr inbounds %struct._Object* %4, i32 0, i32 1
  %dvalue = getelementptr inbounds %struct._Value* %v2, i32 0, i32 1
  %5 = load double* %dvalue, align 8
  %cmp3 = fcmp une double %5, 0.000000e+00
  %conv4 = zext i1 %cmp3 to i32
  store i32 %conv4, i32* %ret, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb1, %sw.bb
  %6 = load i32* %ret, align 4
  ret i32 %6
}
